================================================================================
FILE: D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp
WARNINGS: 9
ERRORS: 20
================================================================================
105231 warnings and 20 errors generated.
Error while processing D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp.
error: too many errors emitted, stopping now [clang-diagnostic-error]
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:22:14: error: unknown type name 'PATTERN_NAME' [clang-diagnostic-error]
   22 | class Secure{PATTERN_NAME}V1 {
      |              ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:22:26: error: expected member name or ';' after declaration specifiers [clang-diagnostic-error]
   22 | class Secure{PATTERN_NAME}V1 {
      |              ~~~~~~~~~~~~^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:22:27: warning: variable 'V1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   22 | class Secure{PATTERN_NAME}V1 {
      |                           ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:22:27: warning: variable name 'V1' is too short, expected at least 3 characters [readability-identifier-length]
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:23:1: error: expected expression [clang-diagnostic-error]
   23 | private:
      | ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:49:7: error: redefinition of 'Secure' [clang-diagnostic-error]
   49 | class Secure{PATTERN_NAME}V2 {
      |       ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:22:7: note: previous definition is here
   22 | class Secure{PATTERN_NAME}V1 {
      |       ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:49:27: warning: variable 'V2' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   49 | class Secure{PATTERN_NAME}V2 {
      |                           ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:49:27: warning: variable name 'V2' is too short, expected at least 3 characters [readability-identifier-length]
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:50:1: error: expected expression [clang-diagnostic-error]
   50 | private:
      | ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:75:19: error: unknown type name 'PATTERN_NAME' [clang-diagnostic-error]
   75 | class Alternative{PATTERN_NAME} {
      |                   ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:75:31: error: expected member name or ';' after declaration specifiers [clang-diagnostic-error]
   75 | class Alternative{PATTERN_NAME} {
      |                   ~~~~~~~~~~~~^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:75:32: error: expected ';' after class [clang-diagnostic-error]
   75 | class Alternative{PATTERN_NAME} {
      |                                ^
      |                                ;
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:75:33: error: expected unqualified-id [clang-diagnostic-error]
   75 | class Alternative{PATTERN_NAME} {
      |                                 ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:101:6: error: variable has incomplete type 'void' [clang-diagnostic-error]
  101 | void demonstrateSecure{PATTERN_NAME}V1() {
      |      ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:101:6: warning: variable 'demonstrateSecure' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:101:24: error: use of undeclared identifier 'PATTERN_NAME' [clang-diagnostic-error]
  101 | void demonstrateSecure{PATTERN_NAME}V1() {
      |                        ^~~~~~~~~~~~
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:101:37: error: expected ';' after top level declarator [clang-diagnostic-error]
  101 | void demonstrateSecure{PATTERN_NAME}V1() {
      |                                     ^
      |                                     ;
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:109:6: error: variable has incomplete type 'void' [clang-diagnostic-error]
  109 | void demonstrateSecure{PATTERN_NAME}V2() {
      |      ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:109:6: warning: variable 'demonstrateSecure' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:109:24: error: use of undeclared identifier 'PATTERN_NAME' [clang-diagnostic-error]
  109 | void demonstrateSecure{PATTERN_NAME}V2() {
      |                        ^~~~~~~~~~~~
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:109:37: error: expected ';' after top level declarator [clang-diagnostic-error]
  109 | void demonstrateSecure{PATTERN_NAME}V2() {
      |                                     ^
      |                                     ;
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:117:6: error: variable has incomplete type 'void' [clang-diagnostic-error]
  117 | void demonstrateAlternative{PATTERN_NAME}() {
      |      ^
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:117:6: warning: variable 'demonstrateAlternative' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:117:29: error: use of undeclared identifier 'PATTERN_NAME' [clang-diagnostic-error]
  117 | void demonstrateAlternative{PATTERN_NAME}() {
      |                             ^~~~~~~~~~~~
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:117:42: error: expected ';' after top level declarator [clang-diagnostic-error]
  117 | void demonstrateAlternative{PATTERN_NAME}() {
      |                                          ^
      |                                          ;
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
Suppressed 105222 warnings (105222 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
Found compiler error(s).
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:130:115: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== ДЕМОНСТРАЦИЯ БЕЗОПАСНЫХ АЛЬТЕРНАТИВ {PATTERN_NAME} ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\SECURE_ALTERNATIVES_TEMPLATE.cpp:133:22: error: expected ';' after expression [clang-diagnostic-error]
  133 |     demonstrateSecure{PATTERN_NAME}V1();
      |                      ^
      |                      ;

================================================================================
FILE: D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:22:7: warning: class 'Securehello_worldV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securehello_worldV1 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:29:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securehello_worldV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:35:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securehello_worldV1& operator=(const Securehello_worldV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Securehello_worldV1&
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:41:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securehello_worldV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:49:7: warning: class 'Securehello_worldV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securehello_worldV2 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:55:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securehello_worldV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:61:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securehello_worldV2& operator=(const Securehello_worldV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Securehello_worldV2&
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:67:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securehello_worldV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:75:7: warning: class 'Alternativehello_world' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativehello_world {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:82:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativehello_world СЃРѕР·РґР°РЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:87:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativehello_world& operator=(const Alternativehello_world&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Alternativehello_world&
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:93:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativehello_world СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:102:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securehello_worldV1 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:106:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securehello_worldV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:110:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securehello_worldV2 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:114:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securehello_worldV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:118:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativehello_world ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:122:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativehello_world РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:130:186: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ hello_world ===" << std::endl;
      |                                                                                                                              ^~~~~~~~~
      |                                                                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
D:\Work\Patterns\01-basics\lesson_1_1_hello_world\secure_hello_world_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'

================================================================================
FILE: D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:22:7: warning: class 'SecureraiiV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecureraiiV1 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:29:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecureraiiV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:35:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecureraiiV1& operator=(const SecureraiiV1&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> SecureraiiV1&
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:41:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecureraiiV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:49:7: warning: class 'SecureraiiV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecureraiiV2 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:55:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecureraiiV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:61:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecureraiiV2& operator=(const SecureraiiV2&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> SecureraiiV2&
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:67:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecureraiiV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:75:7: warning: class 'Alternativeraii' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativeraii {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:82:68: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativeraii СЃРѕР·РґР°РЅ" << std::endl;
      |                                                        ^~~~~~~~~
      |                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:87:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativeraii& operator=(const Alternativeraii&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> Alternativeraii&
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:93:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativeraii СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:102:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecureraiiV1 ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:106:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecureraiiV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:110:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecureraiiV2 ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:114:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecureraiiV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:118:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativeraii ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:122:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativeraii РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:130:179: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ raii ===" << std::endl;
      |                                                                                                                       ^~~~~~~~~
      |                                                                                                                       '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_2_raii\secure_raii_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:22:7: warning: class 'Securesmart_pointersV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securesmart_pointersV1 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:29:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securesmart_pointersV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:35:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securesmart_pointersV1& operator=(const Securesmart_pointersV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securesmart_pointersV1&
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:41:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securesmart_pointersV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:49:7: warning: class 'Securesmart_pointersV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securesmart_pointersV2 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:55:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securesmart_pointersV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:61:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securesmart_pointersV2& operator=(const Securesmart_pointersV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securesmart_pointersV2&
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:67:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securesmart_pointersV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:75:7: warning: class 'Alternativesmart_pointers' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativesmart_pointers {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:82:78: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativesmart_pointers СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:87:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativesmart_pointers& operator=(const Alternativesmart_pointers&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                   -> Alternativesmart_pointers&
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:93:92: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativesmart_pointers СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:102:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securesmart_pointersV1 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:106:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securesmart_pointersV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:110:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securesmart_pointersV2 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:114:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securesmart_pointersV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:118:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativesmart_pointers ===" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:122:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativesmart_pointers РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:130:189: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ smart_pointers ===" << std::endl;
      |                                                                                                                                 ^~~~~~~~~
      |                                                                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_3_smart_pointers\secure_smart_pointers_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:22:7: warning: class 'Securemove_semanticsV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securemove_semanticsV1 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:29:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securemove_semanticsV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:35:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securemove_semanticsV1& operator=(const Securemove_semanticsV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securemove_semanticsV1&
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:41:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securemove_semanticsV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:49:7: warning: class 'Securemove_semanticsV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securemove_semanticsV2 {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:55:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securemove_semanticsV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:61:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securemove_semanticsV2& operator=(const Securemove_semanticsV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securemove_semanticsV2&
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:67:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securemove_semanticsV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:75:7: warning: class 'Alternativemove_semantics' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativemove_semantics {
      |       ^
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:82:78: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativemove_semantics СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:87:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativemove_semantics& operator=(const Alternativemove_semantics&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                   -> Alternativemove_semantics&
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:93:92: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativemove_semantics СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:102:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securemove_semanticsV1 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:106:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securemove_semanticsV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:110:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securemove_semanticsV2 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:114:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securemove_semanticsV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:118:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativemove_semantics ===" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:122:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativemove_semantics РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:130:189: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ move_semantics ===" << std::endl;
      |                                                                                                                                 ^~~~~~~~~
      |                                                                                                                                 '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\01-basics\lesson_1_4_move_semantics\secure_move_semantics_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:22:7: warning: class 'SecuresolidV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecuresolidV1 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:29:128: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecuresolidV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                     ^~~~~~~~~
      |                                                                                                     '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:35:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecuresolidV1& operator=(const SecuresolidV1&) = delete;
      |     ~~~~~~~~~~~~~~ ^
      |     auto                                           -> SecuresolidV1&
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:41:80: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecuresolidV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:49:7: warning: class 'SecuresolidV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecuresolidV2 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:55:128: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecuresolidV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                     ^~~~~~~~~
      |                                                                                                     '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:61:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecuresolidV2& operator=(const SecuresolidV2&) = delete;
      |     ~~~~~~~~~~~~~~ ^
      |     auto                                           -> SecuresolidV2&
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:67:80: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecuresolidV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:75:7: warning: class 'Alternativesolid' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativesolid {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:82:69: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativesolid СЃРѕР·РґР°РЅ" << std::endl;
      |                                                         ^~~~~~~~~
      |                                                         '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:87:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativesolid& operator=(const Alternativesolid&) = delete;
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> Alternativesolid&
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:93:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativesolid СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:102:98: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecuresolidV1 ===" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:106:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecuresolidV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:110:98: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecuresolidV2 ===" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:114:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecuresolidV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:118:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativesolid ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:122:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativesolid РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:130:180: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ solid ===" << std::endl;
      |                                                                                                                        ^~~~~~~~~
      |                                                                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_1_solid\secure_solid_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
Suppressed 106451 warnings (106451 in non-user code).
      |                                                                             '\n'
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:22:7: warning: class 'Securedry_kiss_yagniV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securedry_kiss_yagniV1 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:29:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securedry_kiss_yagniV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:35:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securedry_kiss_yagniV1& operator=(const Securedry_kiss_yagniV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securedry_kiss_yagniV1&
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:41:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securedry_kiss_yagniV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:49:7: warning: class 'Securedry_kiss_yagniV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securedry_kiss_yagniV2 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:55:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securedry_kiss_yagniV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:61:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securedry_kiss_yagniV2& operator=(const Securedry_kiss_yagniV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securedry_kiss_yagniV2&
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:67:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securedry_kiss_yagniV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:75:7: warning: class 'Alternativedry_kiss_yagni' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativedry_kiss_yagni {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:82:78: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativedry_kiss_yagni СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:87:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativedry_kiss_yagni& operator=(const Alternativedry_kiss_yagni&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                   -> Alternativedry_kiss_yagni&
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:93:92: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativedry_kiss_yagni СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:102:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securedry_kiss_yagniV1 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:106:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securedry_kiss_yagniV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:110:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securedry_kiss_yagniV2 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:114:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securedry_kiss_yagniV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:118:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativedry_kiss_yagni ===" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:122:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativedry_kiss_yagni РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:130:189: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ dry_kiss_yagni ===" << std::endl;
      |                                                                                                                                 ^~~~~~~~~
      |                                                                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_2_dry_kiss_yagni\secure_dry_kiss_yagni_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:22:7: warning: class 'Securecomposition_inheritanceV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securecomposition_inheritanceV1 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:29:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securecomposition_inheritanceV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                                       ^~~~~~~~~
      |                                                                                                                       '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:35:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securecomposition_inheritanceV1& operator=(const Securecomposition_inheritanceV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                               -> Securecomposition_inheritanceV1&
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:41:98: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securecomposition_inheritanceV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:49:7: warning: class 'Securecomposition_inheritanceV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securecomposition_inheritanceV2 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:55:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securecomposition_inheritanceV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                                       ^~~~~~~~~
      |                                                                                                                       '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:61:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securecomposition_inheritanceV2& operator=(const Securecomposition_inheritanceV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                               -> Securecomposition_inheritanceV2&
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:67:98: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securecomposition_inheritanceV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:75:7: warning: class 'Alternativecomposition_inheritance' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativecomposition_inheritance {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:82:87: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativecomposition_inheritance СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:87:41: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativecomposition_inheritance& operator=(const Alternativecomposition_inheritance&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                                     -> Alternativecomposition_inheritance&
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:93:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativecomposition_inheritance СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:102:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecomposition_inheritanceV1 ===" << std::endl;
      |                                                                                                 ^~~~~~~~~
      |                                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:106:125: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securecomposition_inheritanceV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:110:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecomposition_inheritanceV2 ===" << std::endl;
      |                                                                                                 ^~~~~~~~~
      |                                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:114:125: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securecomposition_inheritanceV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:118:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativecomposition_inheritance ===" << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:122:128: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativecomposition_inheritance РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                             ^~~~~~~~~
      |                                                                                             '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:130:198: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ composition_inheritance ===" << std::endl;
      |                                                                                                                                          ^~~~~~~~~
      |                                                                                                                                          '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_3_composition_inheritance\secure_composition_inheritance_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'

================================================================================
FILE: D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:22:7: warning: class 'Securedependency_injectionV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securedependency_injectionV1 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:29:143: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securedependency_injectionV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                                    ^~~~~~~~~
      |                                                                                                                    '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:35:35: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securedependency_injectionV1& operator=(const Securedependency_injectionV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                         -> Securedependency_injectionV1&
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:41:95: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securedependency_injectionV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:49:7: warning: class 'Securedependency_injectionV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securedependency_injectionV2 {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:55:143: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securedependency_injectionV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                                    ^~~~~~~~~
      |                                                                                                                    '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:61:35: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securedependency_injectionV2& operator=(const Securedependency_injectionV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                         -> Securedependency_injectionV2&
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:67:95: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securedependency_injectionV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:75:7: warning: class 'Alternativedependency_injection' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativedependency_injection {
      |       ^
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:82:84: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativedependency_injection СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:87:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativedependency_injection& operator=(const Alternativedependency_injection&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                               -> Alternativedependency_injection&
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:93:98: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativedependency_injection СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:102:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securedependency_injectionV1 ===" << std::endl;
      |                                                                                              ^~~~~~~~~
      |                                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:106:122: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securedependency_injectionV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                       ^~~~~~~~~
      |                                                                                       '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:110:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securedependency_injectionV2 ===" << std::endl;
      |                                                                                              ^~~~~~~~~
      |                                                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:114:122: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securedependency_injectionV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                       ^~~~~~~~~
      |                                                                                       '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:118:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativedependency_injection ===" << std::endl;
      |                                                                                                 ^~~~~~~~~
      |                                                                                                 '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:122:125: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativedependency_injection РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:130:195: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ dependency_injection ===" << std::endl;
      |                                                                                                                                       ^~~~~~~~~
      |                                                                                                                                       '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\02-principles\lesson_2_4_dependency_injection\secure_dependency_injection_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp
WARNINGS: 96
ERRORS: 0
================================================================================
107514 warnings generated.
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:32:7: warning: class 'SecureSingletonV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   32 | class SecureSingletonV1 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:44:51: warning: 999 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   44 |                          isAdmin(true), userLevel(999) {
      |                                                   ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:45:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   45 |         std::cout << "SecureSingletonV1 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:51:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   51 |     SecureSingletonV1& operator=(const SecureSingletonV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureSingletonV1&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:53:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   53 |     static SecureSingletonV1& getInstance() {
      |            ~~~~~~~~~~~~~~~~~~ ^
      |            auto                             -> SecureSingletonV1&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:55:35: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   55 |         std::call_once(init_flag, []() {
      |                                   ^
      |                                        -> void
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:62:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   62 |     bool checkAdminAccess(const std::string& password) const {
      |     ~~~~ ^
      |     auto                                                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:63:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   63 |         std::lock_guard<std::mutex> lock(data_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:78:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   78 |     int getUserLevel() const {
      |     ~~~ ^
      |     auto                     -> int
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:82:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   82 |     bool isAdminUser() const {
      |     ~~~~ ^
      |     auto                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:88:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   88 |             std::cout << "Выполняется административное действие!" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:89:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   89 |             std::cout << "Уровень пользователя: " << userLevel.load() << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:91:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   91 |             std::cout << "Доступ запрещен!" << std::endl;
      |                                                ^~~~~~~~~
      |                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:96:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   96 |         std::cout << "SecureSingletonV1 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:107:7: warning: class 'SecureSingletonV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  107 | class SecureSingletonV2 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:117:27: warning: initializer for member 'adminPassword' is redundant [readability-redundant-member-init]
  117 |     SecureSingletonV2() : adminPassword(), isAdmin(true), userLevel(999) {
      |                           ^~~~~~~~~~~~~~~
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:117:69: warning: 999 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  117 |     SecureSingletonV2() : adminPassword(), isAdmin(true), userLevel(999) {
      |                                                                     ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:122:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |         std::cout << "SecureSingletonV2 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:128:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  128 |     SecureSingletonV2& operator=(const SecureSingletonV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureSingletonV2&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:130:47: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  130 |     static std::shared_ptr<SecureSingletonV2> getInstance() {
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |            auto                                             -> std::shared_ptr<SecureSingletonV2>
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:131:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  131 |         std::lock_guard<std::mutex> lock(instance_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:141:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  141 |     bool checkAdminAccess(const std::string& password) const {
      |     ~~~~ ^
      |     auto                                                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:154:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  154 |     int getUserLevel() const {
      |     ~~~ ^
      |     auto                     -> int
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:158:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  158 |     bool isAdminUser() const {
      |     ~~~~ ^
      |     auto                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:164:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  164 |             std::cout << "Выполняется административное действие!" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:165:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  165 |             std::cout << "Уровень пользователя: " << userLevel.load() << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:167:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  167 |             std::cout << "Доступ запрещен!" << std::endl;
      |                                                ^~~~~~~~~
      |                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:173:9: warning: use a ranges version of this algorithm [modernize-use-ranges]
    1 |         std::fill(adminPassword.begin(), adminPassword.end(), 0);
      |         ^~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~
      |         std::ranges::fill adminPassword
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:174:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  174 |         std::cout << "SecureSingletonV2 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:185:7: warning: class 'AdminService' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  185 | class AdminService {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:193:18: warning: pass by value and use std::move [modernize-pass-by-value]
    5 |     AdminService(const std::string& password) 
      |                  ^~~~~~~~~~~~~~~~~~
      |                  std::string 
    6 |         : adminPassword(password), isAdmin(true), userLevel(999) {
      |                                 
      |                         std::move( )
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:194:61: warning: 999 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  194 |         : adminPassword(password), isAdmin(true), userLevel(999) {
      |                                                             ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:195:53: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  195 |         std::cout << "AdminService создан" << std::endl;
      |                                               ^~~~~~~~~
      |                                               '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:200:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  200 |     AdminService& operator=(const AdminService&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> AdminService&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:202:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  202 |     bool checkAdminAccess(const std::string& password) const {
      |     ~~~~ ^
      |     auto                                                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:203:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  203 |         std::lock_guard<std::mutex> lock(data_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:217:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  217 |     int getUserLevel() const {
      |     ~~~ ^
      |     auto                     -> int
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:221:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |     bool isAdminUser() const {
      |     ~~~~ ^
      |     auto                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:227:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  227 |             std::cout << "Выполняется административное действие!" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:228:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  228 |             std::cout << "Уровень пользователя: " << userLevel.load() << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:230:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  230 |             std::cout << "Доступ запрещен!" << std::endl;
      |                                                ^~~~~~~~~
      |                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:235:59: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  235 |         std::cout << "AdminService уничтожен" << std::endl;
      |                                                  ^~~~~~~~~
      |                                                  '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:246:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  246 |     AdminService& getAdminService() {
      |     ~~~~~~~~~~~~~ ^
      |     auto                            -> AdminService&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:247:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  247 |         std::lock_guard<std::mutex> lock(container_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:257:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  257 |         std::lock_guard<std::mutex> lock(container_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:266:7: warning: class 'SecureSingletonV4' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  266 | class SecureSingletonV4 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:278:52: warning: 999 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  278 |     SecureSingletonV4() : isAdmin(true), userLevel(999), accessCount(0) {
      |                                                    ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:283:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  283 |         std::cout << "SecureSingletonV4 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:289:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  289 |     SecureSingletonV4& operator=(const SecureSingletonV4&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureSingletonV4&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:291:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  291 |     static SecureSingletonV4& getInstance() {
      |            ~~~~~~~~~~~~~~~~~~ ^
      |            auto                             -> SecureSingletonV4&
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:293:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  293 |             std::lock_guard<std::mutex> lock(instance_mutex);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:305:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  305 |     bool checkAdminAccess(const std::string& password) const {
      |     ~~~~ ^
      |     auto                                                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:311:67: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  311 |             std::this_thread::sleep_for(std::chrono::microseconds(100));
      |                                                                   ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:318:24: warning: comparison between 'signed char' and 'unsigned char' [bugprone-signed-char-misuse]
  318 |             result &= (password[i] == adminPassword[i]);
      |                        ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:324:9: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  324 |     int getUserLevel() const {
      |     ~~~ ^
      |     auto                     -> int
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:328:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  328 |     bool isAdminUser() const {
      |     ~~~~ ^
      |     auto                     -> bool
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:332:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  332 |     size_t getAccessCount() const {
      |     ~~~~~~ ^
      |     auto                          -> size_t
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:338:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  338 |             std::cout << "Выполняется административное действие!" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:339:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  339 |             std::cout << "Уровень пользователя: " << userLevel.load() << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:340:95: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  340 |             std::cout << "Количество обращений: " << accessCount.load() << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:342:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  342 |             std::cout << "Доступ запрещен!" << std::endl;
      |                                                ^~~~~~~~~
      |                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:348:9: warning: use a ranges version of this algorithm [modernize-use-ranges]
  348 |         std::fill(adminPassword.begin(), adminPassword.end(), 0);
      |         ^~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~
      |         std::ranges::fill adminPassword
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:349:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  349 |         std::cout << "SecureSingletonV4 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:362:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  362 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureSingletonV1 (std::call_once) ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:366:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  366 |     for (int i = 0; i < 5; ++i) {
      |                         ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:9: warning: 'emplace_back' is called inside a loop; consider pre-allocating the container capacity before the loop [performance-inefficient-vector-operation]
  366 |     for (int i = 0; i < 5; ++i) {
  367 |         threads.emplace_back([i]() {
      |         ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  367 |         threads.emplace_back([i]() {
      |                              ^
      |                                    -> void
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:370:103: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  370 |             std::cout << "Поток " << i << " получил доступ к SecureSingletonV1" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:371:112: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  371 |             std::cout << "  - Администратор: " << (instance.isAdminUser() ? "Да" : "Нет") << std::endl;
      |                                                                                              ^~~~~~~~~
      |                                                                                              '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:372:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  372 |             std::cout << "  - Уровень пользователя: " << instance.getUserLevel() << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:378:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  378 |             std::cout << "  - Правильный пароль: " << (correct ? "Да" : "Нет") << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:379:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  379 |             std::cout << "  - Неправильный пароль: " << (incorrect ? "Да" : "Нет") << std::endl;
      |                                                                                       ^~~~~~~~~
      |                                                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:389:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  389 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureSingletonV2 (RAII) ===" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:393:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  393 |     std::cout << "Получен экземпляр SecureSingletonV2" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:394:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  394 |     std::cout << "Администратор: " << (instance->isAdminUser() ? "Да" : "Нет") << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:401:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  401 |         std::cout << "Тот же экземпляр: " << (instance.get() == instance2.get() ? "Да" : "Нет") << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:406:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  406 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ Dependency Injection ===" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:412:65: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  412 |     std::cout << "Получен AdminService через DI" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:413:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  413 |     std::cout << "Администратор: " << (adminService.isAdminUser() ? "Да" : "Нет") << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:419:51: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  419 |     std::cout << "Сервис сброшен" << std::endl;
      |                                      ^~~~~~~~~
      |                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:423:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  423 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureSingletonV4 (Double-Checked Locking) ===" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:427:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  427 |     std::cout << "Получен экземпляр SecureSingletonV4" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:428:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  428 |     std::cout << "Администратор: " << (instance.isAdminUser() ? "Да" : "Нет") << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:429:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  429 |     std::cout << "Количество обращений: " << instance.getAccessCount() << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:438:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  438 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<std::thread>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:829:43: note: frame #5: function '_Emplace_reallocate<(lambda at D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30)>' calls function '_Allocate_at_least_helper<std::allocator<std::thread>>' here
  829 |         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                           ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:783:17: note: frame #6: function '_Emplace_one_at_back<(lambda at D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30)>' calls function '_Emplace_reallocate<(lambda at D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30)>' here
  783 |         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:862:24: note: frame #7: function 'emplace_back<(lambda at D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30)>' calls function '_Emplace_one_at_back<(lambda at D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30)>' here
  862 |         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
      |                        ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:9: note: frame #8: function 'demonstrateSecureSingletonV1' calls function 'emplace_back<(lambda at D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:367:30)>' here
  367 |         threads.emplace_back([i]() {
      |         ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:442:5: note: frame #9: function 'main' calls function 'demonstrateSecureSingletonV1' here
  442 |     demonstrateSecureSingletonV1();
      |     ^
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:438:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  438 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:439:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  439 |     std::cout << "=== ДЕМОНСТРАЦИЯ БЕЗОПАСНЫХ АЛЬТЕРНАТИВ SINGLETON ===" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:447:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  447 |     std::cout << "\n=== РЕКОМЕНДАЦИИ ПО БЕЗОПАСНОСТИ ===" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:448:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  448 |     std::cout << "1. Используйте std::call_once для thread-safe инициализации" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:449:128: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  449 |     std::cout << "2. Применяйте RAII и умные указатели для управления памятью" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:450:121: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  450 |     std::cout << "3. Используйте Dependency Injection вместо Singleton когда возможно" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:451:138: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  451 |     std::cout << "4. Реализуйте постоянное время для криптографических операций" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:452:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  452 |     std::cout << "5. Безопасно очищайте чувствительные данные" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:453:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  453 |     std::cout << "6. Используйте атомарные операции для счетчиков и флагов" << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:454:120: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  454 |     std::cout << "7. Применяйте мьютексы для защиты критических секций" << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\03-creational\lesson_3_1_singleton\secure_singleton_alternatives.cpp:455:145: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  455 |     std::cout << "8. Регулярно анализируйте код с помощью инструментов безопасности" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
Suppressed 107412 warnings (107412 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:22:7: warning: class 'Securefactory_methodV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securefactory_methodV1 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:29:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securefactory_methodV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:35:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securefactory_methodV1& operator=(const Securefactory_methodV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securefactory_methodV1&
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:41:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securefactory_methodV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:49:7: warning: class 'Securefactory_methodV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securefactory_methodV2 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:55:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securefactory_methodV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:61:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securefactory_methodV2& operator=(const Securefactory_methodV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securefactory_methodV2&
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:67:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securefactory_methodV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:75:7: warning: class 'Alternativefactory_method' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativefactory_method {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:82:78: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativefactory_method СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:87:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativefactory_method& operator=(const Alternativefactory_method&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                   -> Alternativefactory_method&
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:93:92: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativefactory_method СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:102:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securefactory_methodV1 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:106:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securefactory_methodV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:110:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securefactory_methodV2 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:114:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securefactory_methodV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:118:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativefactory_method ===" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:122:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativefactory_method РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:130:189: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ factory_method ===" << std::endl;
      |                                                                                                                                 ^~~~~~~~~
      |                                                                                                                                 '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\03-creational\lesson_3_2_factory_method\secure_factory_method_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:22:7: warning: class 'Secureabstract_factoryV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Secureabstract_factoryV1 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:29:139: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Secureabstract_factoryV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                                ^~~~~~~~~
      |                                                                                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:35:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Secureabstract_factoryV1& operator=(const Secureabstract_factoryV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                 -> Secureabstract_factoryV1&
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:41:91: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Secureabstract_factoryV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:49:7: warning: class 'Secureabstract_factoryV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Secureabstract_factoryV2 {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:55:139: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Secureabstract_factoryV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                                ^~~~~~~~~
      |                                                                                                                '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:61:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Secureabstract_factoryV2& operator=(const Secureabstract_factoryV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                 -> Secureabstract_factoryV2&
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:67:91: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Secureabstract_factoryV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:75:7: warning: class 'Alternativeabstract_factory' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativeabstract_factory {
      |       ^
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:82:80: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativeabstract_factory СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:87:34: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativeabstract_factory& operator=(const Alternativeabstract_factory&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                       -> Alternativeabstract_factory&
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:93:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativeabstract_factory СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:102:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Secureabstract_factoryV1 ===" << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:106:118: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Secureabstract_factoryV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:110:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Secureabstract_factoryV2 ===" << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:114:118: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Secureabstract_factoryV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:118:112: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativeabstract_factory ===" << std::endl;
      |                                                                                             ^~~~~~~~~
      |                                                                                             '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:122:121: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativeabstract_factory РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:130:191: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ abstract_factory ===" << std::endl;
      |                                                                                                                                   ^~~~~~~~~
      |                                                                                                                                   '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\03-creational\lesson_3_3_abstract_factory\secure_abstract_factory_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp
WARNINGS: 55
ERRORS: 0
================================================================================
116939 warnings generated.
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:26:29: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
   26 |     SafeMessage(std::string h, std::string b, std::string f)
      |                             ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:26:44: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   26 |     SafeMessage(std::string h, std::string b, std::string f)
      |                                            ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:26:59: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
   26 |     SafeMessage(std::string h, std::string b, std::string f)
      |                                                           ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:47:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 |     SafeMessageBuilder& setHeader(const std::string& header) {
      |     ~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> SafeMessageBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:55:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   55 |     SafeMessageBuilder& setBody(const std::string& body) {
      |     ~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> SafeMessageBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:63:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 |     SafeMessageBuilder& setFooter(const std::string& footer) {
      |     ~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> SafeMessageBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:71:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 |     SafeMessage build() {
      |     ~~~~~~~~~~~ ^
      |     auto                -> SafeMessage
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:72:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
   72 |         return SafeMessage(header_, body_, footer_);
      |                ^~~~~~~~~~~~                       ~
      |                {                                  }
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:82:26: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   82 |         std::string huge(100, 'A');
      |                          ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:109:5: warning: function 'size' should be marked [[nodiscard]] [modernize-use-nodiscard]
  109 |     size_t size() const { return data_.size(); }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:109:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  109 |     size_t size() const { return data_.size(); }
      |     ~~~~~~ ^
      |     auto                -> size_t
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:117:40: warning: performing an implicit widening conversion to type 'const size_t' (aka 'const unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  117 |     static constexpr size_t MAX_SIZE = 1024 * 1024 * 100;  // 100 MB limit
      |                                        ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:117:40: note: make conversion explicit to silence this warning
    1 |     static constexpr size_t MAX_SIZE = 1024 * 1024 * 100;  // 100 MB limit
      |                                        ^~~~~~~~~~~~~~~~~
      |                                        static_cast<const size_t>( )
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:117:40: note: perform multiplication in a wider type
  117 |     static constexpr size_t MAX_SIZE = 1024 * 1024 * 100;  // 100 MB limit
      |                                        ^~~~~~~~~~~
      |                                        static_cast<long long>( )
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:120:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  120 |     SafeDataBlockBuilder& setChunkSize(size_t size) {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                            -> SafeDataBlockBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:125:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  125 |     SafeDataBlockBuilder& setChunkCount(size_t count) {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                              -> SafeDataBlockBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:130:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  130 |     SafeDataBlock build() {
      |     ~~~~~~~~~~~~~ ^
      |     auto                  -> SafeDataBlock
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:130:19: warning: method 'build' can be made const [readability-make-member-function-const]
  130 |     SafeDataBlock build() {
      |                   ^
      |                           const
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:153:23: warning: '/' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  153 |         size_t huge = std::numeric_limits<size_t>::max() / 2 + 1;
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                       (                                     )
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:159:39: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  159 |     auto block = builder.setChunkSize(1024).setChunkCount(100).build();
      |                                       ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:159:59: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  159 |     auto block = builder.setChunkSize(1024).setChunkCount(100).build();
      |                                                           ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:176:31: warning: parameter name 'u' is too short, expected at least 3 characters [readability-identifier-length]
  176 |     ValidatedUser(std::string u, std::string e, int a, bool admin)
      |                               ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:176:46: warning: parameter name 'e' is too short, expected at least 3 characters [readability-identifier-length]
  176 |     ValidatedUser(std::string u, std::string e, int a, bool admin)
      |                                              ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:176:53: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  176 |     ValidatedUser(std::string u, std::string e, int a, bool admin)
      |                                                     ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:193:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  193 |     static bool isValidEmail(const std::string& email) {
      |            ~~~~ ^
      |            auto                                        -> bool
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:199:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  199 |     ValidatedUserBuilder& setUsername(const std::string& name) {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> ValidatedUserBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:200:45: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  200 |         if (name.empty() || name.length() > 50) {
      |                                             ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:207:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  207 |     ValidatedUserBuilder& setEmail(const std::string& email) {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> ValidatedUserBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:215:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     ValidatedUserBuilder& setAge(int age) {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                  -> ValidatedUserBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:216:30: warning: 150 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  216 |         if (age < 0 || age > 150) {
      |                              ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:224:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  224 |     ValidatedUserBuilder& setAdminWithApproval(bool admin, const std::string& approval_token) {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                                      -> ValidatedUserBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:233:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  233 |     ValidatedUser build() {
      |     ~~~~~~~~~~~~~ ^
      |     auto                  -> ValidatedUser
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:237:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  237 |         return ValidatedUser(username_, email_, age_, is_admin_);
      |                ^~~~~~~~~~~~~~                                  ~
      |                {                                               }
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:261:17: warning: 25 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  261 |         .setAge(25)
      |                 ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:280:32: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  280 |     SecureDatabase(std::string h, int p, std::string u)
      |                                ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:280:39: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  280 |     SecureDatabase(std::string h, int p, std::string u)
      |                                       ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:280:54: warning: parameter name 'u' is too short, expected at least 3 characters [readability-identifier-length]
  280 |     SecureDatabase(std::string h, int p, std::string u)
      |                                                      ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:296:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  296 |     SecureDatabaseBuilder& setHost(const std::string& host) {
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                    -> SecureDatabaseBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:301:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  301 |     SecureDatabaseBuilder& setPort(int port) {
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                     -> SecureDatabaseBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:302:33: warning: 65535 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  302 |         if (port <= 0 || port > 65535) {
      |                                 ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:309:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  309 |     SecureDatabaseBuilder& setUsername(const std::string& user) {
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                        -> SecureDatabaseBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:315:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  315 |     SecureDatabase build() {
      |     ~~~~~~~~~~~~~~ ^
      |     auto                   -> SecureDatabase
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:319:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  319 |         return SecureDatabase(*host_, *port_, *username_);
      |                ^~~~~~~~~~~~~~~                          ~
      |                {                                        }
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:334:14: warning: variable name 'db' is too short, expected at least 3 characters [readability-identifier-length]
  334 |         auto db = builder.build();  // Вызовет exception
      |              ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:339:10: warning: variable name 'db' is too short, expected at least 3 characters [readability-identifier-length]
  339 |     auto db = builder
      |          ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:340:18: warning: 5432 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  340 |         .setPort(5432)
      |                  ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:360:30: warning: parameter name 'm' is too short, expected at least 3 characters [readability-identifier-length]
  360 |     CleanRequest(std::string m, std::string u, std::vector<std::string> h)
      |                              ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:360:45: warning: parameter name 'u' is too short, expected at least 3 characters [readability-identifier-length]
  360 |     CleanRequest(std::string m, std::string u, std::vector<std::string> h)
      |                                             ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:360:73: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  360 |     CleanRequest(std::string m, std::string u, std::vector<std::string> h)
      |                                                                         ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:365:26: warning: variable name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  365 |         for (const auto& h : headers_) std::cout << "  " << h << "\n";
      |                          ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:365:39: warning: statement should be inside braces [readability-braces-around-statements]
  365 |         for (const auto& h : headers_) std::cout << "  " << h << "\n";
      |                                       ^                               
      |                                        {
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:382:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  382 |     CleanRequestBuilder& setMethod(const std::string& method) {
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                      -> CleanRequestBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:387:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  387 |     CleanRequestBuilder& setUrl(const std::string& url) {
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                -> CleanRequestBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:392:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  392 |     CleanRequestBuilder& addHeader(const std::string& header) {
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                      -> CleanRequestBuilder&
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:397:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  397 |     CleanRequest build() {
      |     ~~~~~~~~~~~~ ^
      |     auto                 -> CleanRequest
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:433:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  433 | int main() {
      |     ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:49:13: note: frame #0: unhandled exception of type 'std::length_error' may be thrown in function 'setHeader' here
   49 |             throw std::length_error("Header exceeds maximum length");
      |             ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:83:9: note: frame #1: function 'demonstrateSafeBoundsChecking' calls function 'setHeader' here
   83 |         builder.setHeader(huge);  // Вызовет exception
      |         ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:436:5: note: frame #2: function 'main' calls function 'demonstrateSafeBoundsChecking' here
  436 |     demonstrateSafeBoundsChecking();
      |     ^
D:\Work\Patterns\03-creational\lesson_3_4_builder\secure_builder_alternatives.cpp:433:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  433 | int main() {
      | ~~~ ^
      | auto       -> int
Suppressed 116876 warnings (116876 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp
WARNINGS: 83
ERRORS: 0
================================================================================
106959 warnings generated.
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:24:7: warning: class 'SecureAdapterV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   24 | class SecureAdapterV1 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:31:103: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   31 |         std::cout << "SecureAdapterV1 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:36:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   36 |     SecureAdapterV1& operator=(const SecureAdapterV1&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> SecureAdapterV1&
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:40:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   40 |         std::lock_guard<std::mutex> lock(adapter_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:41:25: warning: parameter 'obj' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    5 |         adaptedObject = obj;
      |                         ^  
      |                         std::move( )
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:45:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   45 |     std::shared_ptr<T> getAdapted() const {
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                  -> std::shared_ptr<T>
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:46:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   46 |         std::lock_guard<std::mutex> lock(adapter_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:50:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   50 |     bool isValid() const {
      |     ~~~~ ^
      |     auto                 -> bool
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:51:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   51 |         std::lock_guard<std::mutex> lock(adapter_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:56:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   56 |         std::cout << "SecureAdapterV1 уничтожен" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:64:7: warning: class 'SecureAdapterV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   64 | class SecureAdapterV2 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:71:103: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   71 |         std::cout << "SecureAdapterV2 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:76:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   76 |     SecureAdapterV2& operator=(const SecureAdapterV2&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> SecureAdapterV2&
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:80:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   80 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:87:35: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   87 |         std::memcpy(buffer.data() + oldSize, data, length);
      |                                   ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:96:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   96 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:97:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   97 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:101:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  101 |     size_t getSize() const {
      |     ~~~~~~ ^
      |     auto                   -> size_t
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:102:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  102 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:107:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  107 |         std::cout << "SecureAdapterV2 уничтожен" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:115:7: warning: class 'SecureAdapterV3' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  115 | class SecureAdapterV3 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:122:38: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  122 |     SecureAdapterV3(size_t maxSize = 1024 * 1024) : maxSize(maxSize) {
      |                                      ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:122:38: note: make conversion explicit to silence this warning
    1 |     SecureAdapterV3(size_t maxSize = 1024 * 1024) : maxSize(maxSize) {
      |                                      ^~~~~~~~~~~
      |                                      static_cast<size_t>( )
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:122:38: note: perform multiplication in a wider type
  122 |     SecureAdapterV3(size_t maxSize = 1024 * 1024) : maxSize(maxSize) {
      |                                      ^~~~
      |                                      static_cast<long long>( )
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:122:38: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  122 |     SecureAdapterV3(size_t maxSize = 1024 * 1024) : maxSize(maxSize) {
      |                                      ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:122:45: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  122 |     SecureAdapterV3(size_t maxSize = 1024 * 1024) : maxSize(maxSize) {
      |                                             ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:123:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  123 |         std::cout << "SecureAdapterV3 создан с максимальным размером " << maxSize << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:128:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  128 |     SecureAdapterV3& operator=(const SecureAdapterV3&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> SecureAdapterV3&
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:131:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  131 |     bool adaptData(const char* data, size_t length) {
      |     ~~~~ ^
      |     auto                                            -> bool
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:132:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  132 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:136:114: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  136 |             std::cout << "ОШИБКА: Превышен максимальный размер буфера!" << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:142:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  142 |             std::cout << "ОШИБКА: Integer overflow при адаптации данных!" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:149:35: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  149 |         std::memcpy(buffer.data() + oldSize, data, length);
      |                                   ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:155:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:156:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  156 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:160:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  160 |     size_t getSize() const {
      |     ~~~~~~ ^
      |     auto                   -> size_t
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:161:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  161 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:165:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  165 |     size_t getMaxSize() const {
      |     ~~~~~~ ^
      |     auto                      -> size_t
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:170:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  170 |         std::cout << "SecureAdapterV3 уничтожен" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:178:7: warning: class 'SecureAdapterV4' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  178 | class SecureAdapterV4 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:185:103: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  185 |         std::cout << "SecureAdapterV4 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:190:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  190 |     SecureAdapterV4& operator=(const SecureAdapterV4&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> SecureAdapterV4&
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:194:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  194 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:203:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  203 |         std::memcpy(buffer->data() + oldSize, data, length);
      |                                    ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:207:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  207 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:208:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  208 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:210:20: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  210 |             return std::vector<char>();
      |                    ^~~~~~~~~~~~~~~~~~~
      |                    {}
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:215:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  215 |     size_t getSize() const {
      |     ~~~~~~ ^
      |     auto                   -> size_t
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:216:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  216 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:225:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  225 |         std::lock_guard<std::mutex> lock(buffer_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:231:62: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  231 |         std::cout << "SecureAdapterV4 уничтожен" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:240:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  240 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureAdapterV1 (безопасные типы) ===" << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:245:41: warning: 42 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  245 |     auto intObj = std::make_shared<int>(42);
      |                                         ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:248:59: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  248 |     std::cout << "Объект адаптирован" << std::endl;
      |                                          ^~~~~~~~~
      |                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:249:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  249 |     std::cout << "Валидность: " << (adapter.isValid() ? "Да" : "Нет") << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:253:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  253 |         std::cout << "Адаптированный объект: " << *adaptedObj << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:258:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  258 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureAdapterV2 (std::vector) ===" << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:263:34: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  263 |     adapter.adaptData("Hello, ", 7);
      |                                  ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:266:72: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  266 |     std::cout << "Размер данных: " << adapter.getSize() << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:270:15: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  270 |     for (char c : data) {
      |               ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:273:18: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  273 |     std::cout << std::endl;
      |                  ^~~~~~~~~
      |                  '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:277:115: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  277 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureAdapterV3 (с проверкой размеров) ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:279:29: warning: 1000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  279 |     SecureAdapterV3 adapter(1000); // Максимальный размер 1000 байт
      |                             ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:282:48: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  282 |     bool success1 = adapter.adaptData("Hello", 5);
      |                                                ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:283:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  283 |     std::cout << "Адаптация 'Hello': " << (success1 ? "Успех" : "Неудача") << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:286:27: warning: 2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  286 |     std::string largeData(2000, 'A');
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:288:120: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  288 |     std::cout << "Адаптация больших данных: " << (success2 ? "Успех" : "Неудача") << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:290:74: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  290 |     std::cout << "Текущий размер: " << adapter.getSize() << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:291:87: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  291 |     std::cout << "Максимальный размер: " << adapter.getMaxSize() << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:295:81: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  295 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureAdapterV4 (RAII) ===" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:300:32: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  300 |     adapter.adaptData("RAII ", 5);
      |                                ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:301:34: warning: 7 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  301 |     adapter.adaptData("Adapter", 7);
      |                                  ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:303:72: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  303 |     std::cout << "Размер данных: " << adapter.getSize() << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:307:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  307 |     std::cout << "Размер после сброса: " << adapter.getSize() << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:314:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  314 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:1522:41: note: frame #5: function '_Resize_reallocate<std::_Value_init_tag>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 1522 |         const pointer _Newvec         = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:1568:17: note: frame #6: function '_Resize<std::_Value_init_tag>' calls function '_Resize_reallocate<std::_Value_init_tag>' here
 1568 |                 _Resize_reallocate(_Newsize, _Val);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:1590:9: note: frame #7: function 'resize' calls function '_Resize<std::_Value_init_tag>' here
 1590 |         _Resize(_Newsize, _Value_init_tag{});
      |         ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:84:9: note: frame #8: function 'adaptData' calls function 'resize' here
   84 |         buffer.resize(oldSize + length);
      |         ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:263:5: note: frame #9: function 'demonstrateSecureAdapterV2' calls function 'adaptData' here
  263 |     adapter.adaptData("Hello, ", 7);
      |     ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:319:5: note: frame #10: function 'main' calls function 'demonstrateSecureAdapterV2' here
  319 |     demonstrateSecureAdapterV2();
      |     ^
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:314:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  314 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:315:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  315 |     std::cout << "=== ДЕМОНСТРАЦИЯ БЕЗОПАСНЫХ АЛЬТЕРНАТИВ ADAPTER ===" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:323:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  323 |     std::cout << "\n=== РЕКОМЕНДАЦИИ ПО БЕЗОПАСНОСТИ ===" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:324:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  324 |     std::cout << "1. Используйте безопасные типы и шаблоны" << std::endl;
      |                                                                ^~~~~~~~~
      |                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:325:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  325 |     std::cout << "2. Проверяйте типы перед приведением" << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:326:85: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  326 |     std::cout << "3. Применяйте RAII и умные указатели" << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:327:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  327 |     std::cout << "4. Используйте мьютексы для многопоточности" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:328:77: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  328 |     std::cout << "5. Валидируйте входные данные" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:329:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  329 |     std::cout << "6. Ограничивайте максимальные размеры" << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_1_adapter\secure_adapter_alternatives.cpp:330:145: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  330 |     std::cout << "7. Регулярно анализируйте код с помощью инструментов безопасности" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
Suppressed 106864 warnings (106864 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp
WARNINGS: 86
ERRORS: 0
================================================================================
107083 warnings generated.
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:23:7: warning: class 'SecureDecoratorV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   23 | class SecureDecoratorV1 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:32:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   32 |         std::cout << "SecureDecoratorV1 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:37:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   37 |     SecureDecoratorV1& operator=(const SecureDecoratorV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureDecoratorV1&
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:40:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   40 |     bool addDecorator(std::shared_ptr<SecureDecoratorV1> decorator) {
      |     ~~~~ ^
      |     auto                                                            -> bool
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:40:58: warning: the parameter 'decorator' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
   40 |     bool addDecorator(std::shared_ptr<SecureDecoratorV1> decorator) {
      |                                                          ^
      |                       const                             &
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:41:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   41 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:44:120: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   44 |             std::cout << "ОШИБКА: Превышена максимальная глубина цепочки!" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:50:11: warning: do not use 'else' after 'return' [readability-else-after-return]
   50 |         } else {
      |           ^~~~~~
   51 |             next = decorator;
      |             ~~~~~~~~~~~~~~~~~
   52 |             return true;
      |             ~~~~~~~~~~~~
   53 |         }
      |         ~
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:58:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   58 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:64:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   64 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:66:77: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   66 |         std::cout << "Обработка декоратора: " << data << std::endl;
      |                                                          ^~~~~~~~~
      |                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:74:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   74 |     std::string getData() const {
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:75:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   75 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:80:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   80 |     size_t getDepth() const {
      |     ~~~~~~ ^
      |     auto                    -> size_t
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:81:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   81 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:89:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   89 |         std::cout << "SecureDecoratorV1 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:97:7: warning: class 'SecureDecoratorV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   97 | class SecureDecoratorV2 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:105:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  105 |         std::cout << "SecureDecoratorV2 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:110:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  110 |     SecureDecoratorV2& operator=(const SecureDecoratorV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureDecoratorV2&
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:114:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  114 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:125:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  125 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:134:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  134 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:136:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  136 |         std::cout << "Обработка декоратора размером: " << data.size() << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:144:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  144 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:145:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  145 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:150:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  150 |         std::cout << "SecureDecoratorV2 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:158:7: warning: class 'SecureDecoratorV3' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  158 | class SecureDecoratorV3 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:166:44: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  166 |     SecureDecoratorV3(size_t maxDataSize = 1024 * 1024) : maxDataSize(maxDataSize) {
      |                                            ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:166:44: note: make conversion explicit to silence this warning
    1 |     SecureDecoratorV3(size_t maxDataSize = 1024 * 1024) : maxDataSize(maxDataSize) {
      |                                            ^~~~~~~~~~~
      |                                            static_cast<size_t>( )
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:166:44: note: perform multiplication in a wider type
  166 |     SecureDecoratorV3(size_t maxDataSize = 1024 * 1024) : maxDataSize(maxDataSize) {
      |                                            ^~~~
      |                                            static_cast<long long>( )
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:166:44: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  166 |     SecureDecoratorV3(size_t maxDataSize = 1024 * 1024) : maxDataSize(maxDataSize) {
      |                                            ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:166:51: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  166 |     SecureDecoratorV3(size_t maxDataSize = 1024 * 1024) : maxDataSize(maxDataSize) {
      |                                                   ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:167:132: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  167 |         std::cout << "SecureDecoratorV3 создан с максимальным размером данных " << maxDataSize << std::endl;
      |                                                                                                   ^~~~~~~~~
      |                                                                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:172:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     SecureDecoratorV3& operator=(const SecureDecoratorV3&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureDecoratorV3&
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:175:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 |     bool addDecorator(std::shared_ptr<SecureDecoratorV3> decorator) {
      |     ~~~~ ^
      |     auto                                                            -> bool
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:175:58: warning: the parameter 'decorator' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  175 |     bool addDecorator(std::shared_ptr<SecureDecoratorV3> decorator) {
      |                                                          ^
      |                       const                             &
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:176:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  176 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:180:11: warning: do not use 'else' after 'return' [readability-else-after-return]
  180 |         } else {
      |           ^~~~~~
  181 |             next = decorator;
      |             ~~~~~~~~~~~~~~~~~
  182 |             return true;
      |             ~~~~~~~~~~~~
  183 |         }
      |         ~
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:187:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  187 |     bool setData(const char* str, size_t length) {
      |     ~~~~ ^
      |     auto                                         -> bool
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:188:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  188 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:192:114: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  192 |             std::cout << "ОШИБКА: Превышен максимальный размер данных!" << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:198:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  198 |             std::cout << "ОШИБКА: Integer overflow при установке данных!" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:211:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  211 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:213:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  213 |         std::cout << "Обработка декоратора размером: " << data.size() << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:221:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  221 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:222:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  222 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:226:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  226 |     size_t getMaxDataSize() const {
      |     ~~~~~~ ^
      |     auto                          -> size_t
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:231:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  231 |         std::cout << "SecureDecoratorV3 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:239:7: warning: class 'SecureDecoratorV4' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  239 | class SecureDecoratorV4 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:247:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  247 |         std::cout << "SecureDecoratorV4 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:252:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  252 |     SecureDecoratorV4& operator=(const SecureDecoratorV4&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureDecoratorV4&
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:255:58: warning: the parameter 'decorator' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  255 |     void addDecorator(std::shared_ptr<SecureDecoratorV4> decorator) {
      |                                                          ^
      |                       const                             &
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:256:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  256 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:267:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  267 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:278:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  278 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:281:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  281 |             std::cout << "Обработка декоратора: " << *data << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:290:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  290 |     std::string getData() const {
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:291:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  291 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:300:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  300 |         std::lock_guard<std::mutex> lock(decorator_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:306:64: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  306 |         std::cout << "SecureDecoratorV4 уничтожен" << std::endl;
      |                                                       ^~~~~~~~~
      |                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:315:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  315 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureDecoratorV1 (ограничение глубины) ===" << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:321:25: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  321 |     for (int i = 0; i < 50; ++i) {
      |                         ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:327:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  327 |             std::cout << "Не удалось добавить декоратор " << i << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:332:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  332 |     std::cout << "Глубина цепочки: " << root->getDepth() << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:337:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  337 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureDecoratorV2 (RAII) ===" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:340:32: warning: 9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  340 |     root->setData("RAII Root", 9);
      |                                ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:343:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  343 |     for (int i = 0; i < 5; ++i) {
      |                         ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:355:112: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  355 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureDecoratorV3 (проверка размеров) ===" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:357:53: warning: 1000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  357 |     auto root = std::make_shared<SecureDecoratorV3>(1000); // Максимальный размер 1000 байт
      |                                                     ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:360:44: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  360 |     bool success1 = root->setData("Hello", 5);
      |                                            ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:361:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  361 |     std::cout << "Добавление 'Hello': " << (success1 ? "Успех" : "Неудача") << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:364:27: warning: 2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  364 |     std::string largeData(2000, 'A');
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:366:122: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  366 |     std::cout << "Добавление больших данных: " << (success2 ? "Успех" : "Неудача") << std::endl;
      |                                                                                       ^~~~~~~~~
      |                                                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:368:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  368 |     std::cout << "Максимальный размер: " << root->getMaxDataSize() << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:372:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  372 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureDecoratorV4 (умные указатели) ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:388:5: warning: ambiguous call to 'reset()' on a pointee of a smart pointer, prefer more explicit approach [readability-ambiguous-smartptr-reset-call]
  388 |     root->reset();
      |     ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:388:5: note: consider dereferencing smart pointer to call 'reset' method of the pointee here
  388 |     root->reset();
      |     ^   ~~
      |     (*  ).
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:389:81: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  389 |     std::cout << "Данные после сброса: " << root->getData() << std::endl;
      |                                                                ^~~~~~~~~
      |                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:396:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  396 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2617:26: note: frame #5: function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 2617 |             _Fancy_ptr = _Allocate_at_least_helper(_Al, _Capacity);
      |                          ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:4788:41: note: frame #6: function '_Reallocate_for<(lambda at D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3424:13), const char *>' calls function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' here
 4788 |         const pointer _New_ptr        = _Allocate_for_capacity(_Al, _New_capacity); // throws
      |                                         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3422:16: note: frame #7: function 'assign' calls function '_Reallocate_for<(lambda at D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3424:13), const char *>' here
 3422 |         return _Reallocate_for(
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3228:9: note: frame #8: function 'operator=' calls function 'assign' here
 3228 |         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
      |         ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:59:14: note: frame #9: function 'setData' calls function 'operator=' here
   59 |         data = str;
      |              ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:318:5: note: frame #10: function 'demonstrateSecureDecoratorV1' calls function 'setData' here
  318 |     root->setData("Root decorator");
      |     ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:400:5: note: frame #11: function 'main' calls function 'demonstrateSecureDecoratorV1' here
  400 |     demonstrateSecureDecoratorV1();
      |     ^
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:396:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  396 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:397:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  397 |     std::cout << "=== ДЕМОНСТРАЦИЯ БЕЗОПАСНЫХ АЛЬТЕРНАТИВ DECORATOR ===" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:405:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  405 |     std::cout << "\n=== РЕКОМЕНДАЦИИ ПО БЕЗОПАСНОСТИ ===" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:406:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  406 |     std::cout << "1. Ограничивайте глубину цепочки декораторов" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:407:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  407 |     std::cout << "2. Используйте RAII для управления ресурсами" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:408:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  408 |     std::cout << "3. Проверяйте валидность указателей" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:409:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  409 |     std::cout << "4. Используйте умные указатели" << std::endl;
      |                                                      ^~~~~~~~~
      |                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:410:77: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  410 |     std::cout << "5. Валидируйте входные данные" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:411:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  411 |     std::cout << "6. Ограничивайте максимальные размеры" << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_2_decorator\secure_decorator_alternatives.cpp:412:145: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  412 |     std::cout << "7. Регулярно анализируйте код с помощью инструментов безопасности" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
Suppressed 106989 warnings (106989 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp
WARNINGS: 106
ERRORS: 0
================================================================================
106943 warnings generated.
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:23:7: warning: class 'SecureFacadeV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   23 | class SecureFacadeV1 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:33:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   33 |         std::cout << "SecureFacadeV1 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:38:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   38 |     SecureFacadeV1& operator=(const SecureFacadeV1&) = delete;
      |     ~~~~~~~~~~~~~~~ ^
      |     auto                                             -> SecureFacadeV1&
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:42:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   42 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:45:27: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   45 |         subsystem1.resize(1024);
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:46:27: warning: 2048 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   46 |         subsystem2.resize(2048);
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:47:27: warning: 4096 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   47 |         subsystem3.resize(4096);
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:55:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   55 |     std::string encryptData(const std::string& data) {
      |     ~~~~~~~~~~~ ^
      |     auto                                             -> std::string
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:55:17: warning: method 'encryptData' can be made static [readability-convert-member-functions-to-static]
   55 |     std::string encryptData(const std::string& data) {
      |                 ^
      |     static 
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:57:20: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   57 |         for (char& c : encrypted) {
      |                    ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:58:17: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   58 |             c = c ^ 0xAA; // Простое XOR шифрование
      |                 ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:58:21: warning: 0xAA is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   58 |             c = c ^ 0xAA; // Простое XOR шифрование
      |                     ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:64:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   64 |     std::string decryptData(const std::string& encrypted) const {
      |                 ^
note: this fix will not be applied because it overlaps with another fix
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:64:17: warning: method 'decryptData' can be made static [readability-convert-member-functions-to-static]
   64 |     std::string decryptData(const std::string& encrypted) const {
      |                 ^                                         ~~~~~
      |     static 
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:66:20: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   66 |         for (char& c : decrypted) {
      |                    ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:67:17: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   67 |             c = c ^ 0xAA; // Простое XOR расшифровка
      |                 ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:67:21: warning: 0xAA is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   67 |             c = c ^ 0xAA; // Простое XOR расшифровка
      |                     ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:74:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   74 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:91:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   91 |     std::string getEncryptedSensitiveData() const {
      |     ~~~~~~~~~~~ ^
      |     auto                                          -> std::string
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:92:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   92 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:97:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   97 |     std::string getDecryptedSensitiveData() const {
      |     ~~~~~~~~~~~ ^
      |     auto                                          -> std::string
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:98:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   98 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:103:61: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  103 |         std::cout << "SecureFacadeV1 уничтожен" << std::endl;
      |                                                    ^~~~~~~~~
      |                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:111:7: warning: class 'SecureFacadeV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  111 | class SecureFacadeV2 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:120:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  120 |         std::cout << "SecureFacadeV2 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:125:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  125 |     SecureFacadeV2& operator=(const SecureFacadeV2&) = delete;
      |     ~~~~~~~~~~~~~~~ ^
      |     auto                                             -> SecureFacadeV2&
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:129:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  129 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:132:58: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  132 |         subsystem1 = std::make_unique<std::vector<char>>(1024);
      |                                                          ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:133:58: warning: 2048 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  133 |         subsystem2 = std::make_unique<std::vector<char>>(2048);
      |                                                          ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:134:58: warning: 4096 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  134 |         subsystem3 = std::make_unique<std::vector<char>>(4096);
      |                                                          ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:139:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  139 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:156:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  156 |     std::vector<char> getSubsystem1Data() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:157:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  157 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:161:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  161 |         return std::vector<char>();
      |                ^~~~~~~~~~~~~~~~~~~
      |                {}
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:164:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  164 |     std::vector<char> getSubsystem2Data() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:165:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  165 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:169:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  169 |         return std::vector<char>();
      |                ^~~~~~~~~~~~~~~~~~~
      |                {}
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:172:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     std::vector<char> getSubsystem3Data() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:173:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  173 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:177:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  177 |         return std::vector<char>();
      |                ^~~~~~~~~~~~~~~~~~~
      |                {}
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:181:61: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  181 |         std::cout << "SecureFacadeV2 уничтожен" << std::endl;
      |                                                    ^~~~~~~~~
      |                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:189:7: warning: class 'SecureFacadeV3' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  189 | class SecureFacadeV3 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:198:44: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  198 |     SecureFacadeV3(size_t maxRequestSize = 1024) : maxRequestSize(maxRequestSize) {
      |                                            ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:199:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  199 |         std::cout << "SecureFacadeV3 создан с максимальным размером запроса " << maxRequestSize << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:204:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  204 |     SecureFacadeV3& operator=(const SecureFacadeV3&) = delete;
      |     ~~~~~~~~~~~~~~~ ^
      |     auto                                             -> SecureFacadeV3&
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:208:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  208 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:211:27: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  211 |         subsystem1.resize(1024);
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:212:27: warning: 2048 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  212 |         subsystem2.resize(2048);
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:213:27: warning: 4096 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  213 |         subsystem3.resize(4096);
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:217:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  217 |     bool processRequest(const std::string& request) {
      |     ~~~~ ^
      |     auto                                            -> bool
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:218:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  218 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:222:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  222 |             std::cout << "ОШИБКА: Превышен максимальный размер запроса!" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:228:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  228 |             std::cout << "ОШИБКА: Integer overflow при обработке запроса!" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:249:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  249 |     std::vector<char> getSubsystem1Data() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:250:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  250 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:254:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  254 |     std::vector<char> getSubsystem2Data() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:255:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  255 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:259:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  259 |     std::vector<char> getSubsystem3Data() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:260:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  260 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:264:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  264 |     size_t getMaxRequestSize() const {
      |     ~~~~~~ ^
      |     auto                             -> size_t
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:269:61: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  269 |         std::cout << "SecureFacadeV3 уничтожен" << std::endl;
      |                                                    ^~~~~~~~~
      |                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:277:7: warning: class 'SecureFacadeV4' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  277 | class SecureFacadeV4 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:286:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  286 |         std::cout << "SecureFacadeV4 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:291:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  291 |     SecureFacadeV4& operator=(const SecureFacadeV4&) = delete;
      |     ~~~~~~~~~~~~~~~ ^
      |     auto                                             -> SecureFacadeV4&
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:295:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  295 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:298:58: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  298 |         subsystem1 = std::make_shared<std::vector<char>>(1024);
      |                                                          ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:299:58: warning: 2048 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  299 |         subsystem2 = std::make_shared<std::vector<char>>(2048);
      |                                                          ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:300:58: warning: 4096 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  300 |         subsystem3 = std::make_shared<std::vector<char>>(4096);
      |                                                          ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:305:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  305 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:322:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  322 |     std::shared_ptr<std::vector<char>> getSubsystem1() const {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> std::shared_ptr<std::vector<char>>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:323:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  323 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:327:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  327 |     std::shared_ptr<std::vector<char>> getSubsystem2() const {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> std::shared_ptr<std::vector<char>>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:328:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  328 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:332:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  332 |     std::shared_ptr<std::vector<char>> getSubsystem3() const {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> std::shared_ptr<std::vector<char>>
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:333:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  333 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:339:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  339 |         std::lock_guard<std::mutex> lock(facade_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:346:61: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  346 |         std::cout << "SecureFacadeV4 уничтожен" << std::endl;
      |                                                    ^~~~~~~~~
      |                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:355:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  355 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureFacadeV1 (шифрование данных) ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:365:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  365 |     std::cout << "Зашифрованные данные: " << encryptedData << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:369:84: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  369 |     std::cout << "Расшифрованные данные: " << decryptedData << std::endl;
      |                                                                ^~~~~~~~~
      |                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:373:80: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  373 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureFacadeV2 (RAII) ===" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:386:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  386 |     std::cout << "Размер данных подсистемы 1: " << data1.size() << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:387:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  387 |     std::cout << "Размер данных подсистемы 2: " << data2.size() << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:388:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  388 |     std::cout << "Размер данных подсистемы 3: " << data3.size() << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:392:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  392 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureFacadeV3 (проверка размеров) ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:394:27: warning: 1000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  394 |     SecureFacadeV3 facade(1000); // Максимальный размер 1000 байт
      |                           ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:398:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  398 |     std::cout << "Обработка 'Hello': " << (success1 ? "Успех" : "Неудача") << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:401:30: warning: 2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  401 |     std::string largeRequest(2000, 'A');
      |                              ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:403:120: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  403 |     std::cout << "Обработка больших данных: " << (success2 ? "Успех" : "Неудача") << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:405:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  405 |     std::cout << "Максимальный размер запроса: " << facade.getMaxRequestSize() << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:409:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  409 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureFacadeV4 (умные указатели) ===" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:423:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  423 |         std::cout << "Подсистема 1 доступна, размер: " << subsystem1->size() << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:427:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  427 |         std::cout << "Подсистема 2 доступна, размер: " << subsystem2->size() << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:431:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  431 |         std::cout << "Подсистема 3 доступна, размер: " << subsystem3->size() << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:436:61: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  436 |     std::cout << "Подсистемы сброшены" << std::endl;
      |                                           ^~~~~~~~~
      |                                           '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:443:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  443 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:1522:41: note: frame #5: function '_Resize_reallocate<std::_Value_init_tag>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 1522 |         const pointer _Newvec         = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:1568:17: note: frame #6: function '_Resize<std::_Value_init_tag>' calls function '_Resize_reallocate<std::_Value_init_tag>' here
 1568 |                 _Resize_reallocate(_Newsize, _Val);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:1590:9: note: frame #7: function 'resize' calls function '_Resize<std::_Value_init_tag>' here
 1590 |         _Resize(_Newsize, _Value_init_tag{});
      |         ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:45:9: note: frame #8: function 'initializeSubsystems' calls function 'resize' here
   45 |         subsystem1.resize(1024);
      |         ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:358:5: note: frame #9: function 'demonstrateSecureFacadeV1' calls function 'initializeSubsystems' here
  358 |     facade.initializeSubsystems();
      |     ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:447:5: note: frame #10: function 'main' calls function 'demonstrateSecureFacadeV1' here
  447 |     demonstrateSecureFacadeV1();
      |     ^
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:443:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  443 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:444:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  444 |     std::cout << "=== ДЕМОНСТРАЦИЯ БЕЗОПАСНЫХ АЛЬТЕРНАТИВ FACADE ===" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:452:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  452 |     std::cout << "\n=== РЕКОМЕНДАЦИИ ПО БЕЗОПАСНОСТИ ===" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:453:85: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  453 |     std::cout << "1. Шифруйте чувствительные данные" << std::endl;
      |                                                         ^~~~~~~~~
      |                                                         '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:454:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  454 |     std::cout << "2. Используйте RAII для управления ресурсами" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:455:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  455 |     std::cout << "3. Проверяйте валидность указателей" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:456:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  456 |     std::cout << "4. Используйте умные указатели" << std::endl;
      |                                                      ^~~~~~~~~
      |                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:457:77: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  457 |     std::cout << "5. Валидируйте входные данные" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:458:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  458 |     std::cout << "6. Ограничивайте максимальные размеры" << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_3_facade\secure_facade_alternatives.cpp:459:145: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  459 |     std::cout << "7. Регулярно анализируйте код с помощью инструментов безопасности" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
Suppressed 106818 warnings (106818 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp
WARNINGS: 84
ERRORS: 0
================================================================================
106968 warnings generated.
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:23:7: warning: class 'SecureProxyV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   23 | class SecureProxyV1 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:28:10: warning: use default member initializer for 'isAuthenticated' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   28 |     bool isAuthenticated;
      |          ^              
      |                         {false}
   29 |     mutable std::mutex proxy_mutex;
   30 |     
   31 | public:
   32 |     SecureProxyV1() : isAuthenticated(false) {
      |                       ~~~~~~~~~~~~~~~~~~~~~~
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:33:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   33 |         std::cout << "SecureProxyV1 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:38:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   38 |     SecureProxyV1& operator=(const SecureProxyV1&) = delete;
      |     ~~~~~~~~~~~~~~ ^
      |     auto                                           -> SecureProxyV1&
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:41:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   41 |     bool authenticate(const std::string& user, const std::string& pass) {
      |     ~~~~ ^
      |     auto                                                                -> bool
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:42:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   42 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:55:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   55 |     std::shared_ptr<void> getRealObject() const {
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                        -> std::shared_ptr<void>
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:56:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   56 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:66:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   66 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:67:22: warning: parameter 'obj' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    5 |         realObject = obj;
      |                      ^  
      |                      std::move( )
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:71:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 |     std::string getUsername() const {
      |     ~~~~~~~~~~~ ^
      |     auto                            -> std::string
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:72:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   72 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:76:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   76 |     bool isAuth() const {
      |     ~~~~ ^
      |     auto                -> bool
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:77:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   77 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:82:60: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "SecureProxyV1 уничтожен" << std::endl;
      |                                                   ^~~~~~~~~
      |                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:90:7: warning: class 'SecureProxyV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   90 | class SecureProxyV2 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:97:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   97 |         std::cout << "SecureProxyV2 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:102:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  102 |     SecureProxyV2& operator=(const SecureProxyV2&) = delete;
      |     ~~~~~~~~~~~~~~ ^
      |     auto                                           -> SecureProxyV2&
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:106:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  106 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:111:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  111 |     std::vector<char>* getRealObject() const {
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                     -> std::vector<char>*
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:112:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  112 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:118:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  118 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:126:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  126 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:127:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  127 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:131:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  131 |         return std::vector<char>();
      |                ^~~~~~~~~~~~~~~~~~~
      |                {}
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:135:60: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  135 |         std::cout << "SecureProxyV2 уничтожен" << std::endl;
      |                                                   ^~~~~~~~~
      |                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:143:7: warning: class 'SecureProxyV3' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  143 | class SecureProxyV3 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:150:43: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  150 |     SecureProxyV3(size_t maxRequestSize = 1024) : maxRequestSize(maxRequestSize) {
      |                                           ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:151:133: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  151 |         std::cout << "SecureProxyV3 создан с максимальным размером запроса " << maxRequestSize << std::endl;
      |                                                                                                   ^~~~~~~~~
      |                                                                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:156:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  156 |     SecureProxyV3& operator=(const SecureProxyV3&) = delete;
      |     ~~~~~~~~~~~~~~ ^
      |     auto                                           -> SecureProxyV3&
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:160:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  160 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:164:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  164 |             std::cout << "ОШИБКА: Превышен максимальный размер объекта!" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:172:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  172 |     bool processRequest(const std::string& request) {
      |     ~~~~ ^
      |     auto                                            -> bool
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:173:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  173 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:177:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  177 |             std::cout << "ОШИБКА: Превышен максимальный размер запроса!" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:183:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  183 |             std::cout << "ОШИБКА: Integer overflow при обработке запроса!" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:197:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  197 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:198:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  198 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:202:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  202 |     size_t getMaxRequestSize() const {
      |     ~~~~~~ ^
      |     auto                             -> size_t
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:207:60: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  207 |         std::cout << "SecureProxyV3 уничтожен" << std::endl;
      |                                                   ^~~~~~~~~
      |                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:215:7: warning: class 'SecureProxyV4' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  215 | class SecureProxyV4 {
      |       ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:222:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  222 |         std::cout << "SecureProxyV4 создан в потоке " << std::this_thread::get_id() << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:227:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 |     SecureProxyV4& operator=(const SecureProxyV4&) = delete;
      |     ~~~~~~~~~~~~~~ ^
      |     auto                                           -> SecureProxyV4&
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:231:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  231 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:232:22: warning: parameter 'obj' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
  232 |         realObject = obj;
      |                      ^  
      |                      std::move( )
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:236:40: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  236 |     std::shared_ptr<std::vector<char>> getRealObject() const {
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> std::shared_ptr<std::vector<char>>
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:237:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  237 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:243:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  243 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:251:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  251 |     std::vector<char> getData() const {
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                              -> std::vector<char>
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:252:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  252 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:256:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  256 |         return std::vector<char>();
      |                ^~~~~~~~~~~~~~~~~~~
      |                {}
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:261:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  261 |         std::lock_guard<std::mutex> lock(proxy_mutex);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:266:60: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  266 |         std::cout << "SecureProxyV4 уничтожен" << std::endl;
      |                                                   ^~~~~~~~~
      |                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:275:124: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  275 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureProxyV1 (безопасная аутентификация) ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:281:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  281 |     std::cout << "Аутентификация 'admin': " << (auth1 ? "Успех" : "Неудача") << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:284:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  284 |     std::cout << "Аутентификация 'user': " << (auth2 ? "Успех" : "Неудача") << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:288:69: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  288 |     std::cout << "Имя пользователя: " << username << std::endl;
      |                                                      ^~~~~~~~~
      |                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:291:52: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  291 |     auto obj = std::make_shared<std::vector<char>>(1024);
      |                                                    ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:296:74: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  296 |         std::cout << "Реальный объект доступен" << std::endl;
      |                                                    ^~~~~~~~~
      |                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:301:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  301 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureProxyV2 (RAII) ===" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:306:52: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  306 |     auto obj = std::make_unique<std::vector<char>>(1024);
      |                                                    ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:314:66: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  314 |     std::cout << "Размер данных: " << data.size() << std::endl;
      |                                                      ^~~~~~~~~
      |                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:318:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  318 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureProxyV3 (проверка размеров) ===" << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:320:25: warning: 1000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  320 |     SecureProxyV3 proxy(1000); // Максимальный размер 1000 байт
      |                         ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:323:25: warning: 500 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  323 |     proxy.setRealObject(500);
      |                         ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:327:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  327 |     std::cout << "Обработка 'Hello': " << (success1 ? "Успех" : "Неудача") << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:330:30: warning: 2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  330 |     std::string largeRequest(2000, 'A');
      |                              ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:332:120: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  332 |     std::cout << "Обработка больших данных: " << (success2 ? "Успех" : "Неудача") << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:334:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  334 |     std::cout << "Максимальный размер запроса: " << proxy.getMaxRequestSize() << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:338:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  338 |     std::cout << "\n=== ДЕМОНСТРАЦИЯ SecureProxyV4 (умные указатели) ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:343:52: warning: 1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  343 |     auto obj = std::make_shared<std::vector<char>>(1024);
      |                                                    ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:351:66: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  351 |     std::cout << "Размер данных: " << data.size() << std::endl;
      |                                                      ^~~~~~~~~
      |                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:355:51: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  355 |     std::cout << "Объект сброшен" << std::endl;
      |                                      ^~~~~~~~~
      |                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:362:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  362 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2617:26: note: frame #5: function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 2617 |             _Fancy_ptr = _Allocate_at_least_helper(_Al, _Capacity);
      |                          ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:4788:41: note: frame #6: function '_Reallocate_for<(lambda at D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3424:13), const char *>' calls function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' here
 4788 |         const pointer _New_ptr        = _Allocate_for_capacity(_Al, _New_capacity); // throws
      |                                         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3422:16: note: frame #7: function 'assign' calls function '_Reallocate_for<(lambda at D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3424:13), const char *>' here
 3422 |         return _Reallocate_for(
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:3228:9: note: frame #8: function 'operator=' calls function 'assign' here
 3228 |         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
      |         ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:47:22: note: frame #9: function 'authenticate' calls function 'operator=' here
   47 |             username = user;
      |                      ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:280:18: note: frame #10: function 'demonstrateSecureProxyV1' calls function 'authenticate' here
  280 |     bool auth1 = proxy.authenticate("admin", "password");
      |                  ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:366:5: note: frame #11: function 'main' calls function 'demonstrateSecureProxyV1' here
  366 |     demonstrateSecureProxyV1();
      |     ^
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:362:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  362 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:363:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  363 |     std::cout << "=== ДЕМОНСТРАЦИЯ БЕЗОПАСНЫХ АЛЬТЕРНАТИВ PROXY ===" << std::endl;
      |                                                                         ^~~~~~~~~
      |                                                                         '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:371:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  371 |     std::cout << "\n=== РЕКОМЕНДАЦИИ ПО БЕЗОПАСНОСТИ ===" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:372:125: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  372 |     std::cout << "1. Используйте безопасную аутентификацию и авторизацию" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:373:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  373 |     std::cout << "2. Используйте RAII для управления ресурсами" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:374:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  374 |     std::cout << "3. Проверяйте валидность указателей" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:375:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  375 |     std::cout << "4. Используйте умные указатели" << std::endl;
      |                                                      ^~~~~~~~~
      |                                                      '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:376:77: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  376 |     std::cout << "5. Валидируйте входные данные" << std::endl;
      |                                                     ^~~~~~~~~
      |                                                     '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:377:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  377 |     std::cout << "6. Ограничивайте максимальные размеры" << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\04-structural\lesson_4_4_proxy\secure_proxy_alternatives.cpp:378:145: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  378 |     std::cout << "7. Регулярно анализируйте код с помощью инструментов безопасности" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
Suppressed 106876 warnings (106876 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp
WARNINGS: 70
ERRORS: 0
================================================================================
122770 warnings generated.
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:363:30)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<std::weak_ptr<IObserver>>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:829:43: note: frame #5: function '_Emplace_reallocate<std::weak_ptr<IObserver>>' calls function '_Allocate_at_least_helper<std::allocator<std::weak_ptr<IObserver>>>' here
  829 |         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                           ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:783:17: note: frame #6: function '_Emplace_one_at_back<std::weak_ptr<IObserver>>' calls function '_Emplace_reallocate<std::weak_ptr<IObserver>>' here
  783 |         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:876:9: note: frame #7: function 'push_back' calls function '_Emplace_one_at_back<std::weak_ptr<IObserver>>' here
  876 |         _Emplace_one_at_back(_STD move(_Val));
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:303:9: note: frame #8: function 'attach' calls function 'push_back' here
  303 |         observers_.push_back(observer);
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:364:13: note: frame #9: function 'operator()' calls function 'attach' here
  364 |             subject->attach(obs);
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #10: function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:363:30)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #11: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:363:30)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:363:30)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:370:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<std::shared_ptr<IObserver>>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:829:43: note: frame #5: function '_Emplace_reallocate<const std::shared_ptr<IObserver> &>' calls function '_Allocate_at_least_helper<std::allocator<std::shared_ptr<IObserver>>>' here
  829 |         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                           ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:783:17: note: frame #6: function '_Emplace_one_at_back<const std::shared_ptr<IObserver> &>' calls function '_Emplace_reallocate<const std::shared_ptr<IObserver> &>' here
  783 |         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:871:9: note: frame #7: function 'push_back' calls function '_Emplace_one_at_back<const std::shared_ptr<IObserver> &>' here
  871 |         _Emplace_one_at_back(_Val);
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:326:21: note: frame #8: function 'notify' calls function 'push_back' here
  326 |                     active_observers.push_back(obs);
      |                     ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:373:13: note: frame #9: function 'operator()' calls function 'notify' here
  373 |             subject->notify("Сообщение #" + std::to_string(i) + " из потока");
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #10: function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:370:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #11: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:370:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:370:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:23:7: warning: class 'IObserver' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   23 | class IObserver {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:27:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
   27 |     virtual std::string getName() const = 0;
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:27:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   27 |     virtual std::string getName() const = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:45:13: warning: use a ranges version of this algorithm [modernize-use-ranges]
    1 |             std::remove_if(observers_.begin(), observers_.end(),
      |             ^~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~
      |             std::ranges::remove_if observers_
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:46:17: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   46 |                 [](const std::weak_ptr<IObserver>& wp) {
      |                 ^
      |                                                        -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:46:52: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
   46 |                 [](const std::weak_ptr<IObserver>& wp) {
      |                                                    ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:53:26: warning: pass by value and use std::move [modernize-pass-by-value]
    2 |     explicit SafeSubject(const std::string& name) : name_(name) {}
      |                          ^~~~~~~~~~~~~~~~~~                   
      |                          std::string                      std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:56:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   56 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:59:14: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   59 |         auto it = std::find_if(observers_.begin(), observers_.end(),
      |              ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:59:19: warning: use a ranges version of this algorithm [modernize-use-ranges]
   59 |         auto it = std::find_if(observers_.begin(), observers_.end(),
      |                   ^~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~
      |                   std::ranges::find_if observers_
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:60:13: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   60 |             [&observer](const std::weak_ptr<IObserver>& wp) {
      |             ^
      |                                                             -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:60:57: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
   60 |             [&observer](const std::weak_ptr<IObserver>& wp) {
      |                                                         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:74:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   74 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:77:13: warning: use a ranges version of this algorithm [modernize-use-ranges]
   77 |             std::remove_if(observers_.begin(), observers_.end(),
      |             ^~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~
      |             std::ranges::remove_if observers_
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:78:17: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   78 |                 [&observer](const std::weak_ptr<IObserver>& wp) {
      |                 ^
      |                                                                 -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:78:61: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
   78 |                 [&observer](const std::weak_ptr<IObserver>& wp) {
      |                                                             ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:92:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   92 |             std::lock_guard<std::mutex> lock(mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:115:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  115 |             std::lock_guard<std::mutex> lock(mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:120:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  120 |     size_t getActiveObserverCount() const {
      |     ~~~~~~ ^
      |     auto                                  -> size_t
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:121:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  121 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:124:13: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  124 |             [](const std::weak_ptr<IObserver>& wp) {
      |             ^
      |                                                    -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:124:48: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
  124 |             [](const std::weak_ptr<IObserver>& wp) {
      |                                                ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:130:7: warning: class 'SafeObserver' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  130 | class SafeObserver : public IObserver {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:135:27: warning: pass by value and use std::move [modernize-pass-by-value]
  135 |     explicit SafeObserver(const std::string& name) : name_(name) {
      |                           ^~~~~~~~~~~~~~~~~~                   
      |                           std::string                      std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:139:5: warning: an exception may be thrown in function '~SafeObserver' which should not throw exceptions [bugprone-exception-escape]
  139 |     ~SafeObserver() override {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:140:48: note: frame #6: function '~SafeObserver' calls function 'operator<<<std::char_traits<char>>' here
  140 |         std::cout << "[SafeObserver " << name_ << "] Удален\n";
      |                                                ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:147:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
  147 |     std::string getName() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:147:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  147 |     std::string getName() const override {
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:186:7: warning: class 'Subscription' defines a non-default destructor, a copy constructor, a copy assignment operator and a move constructor but does not define a move assignment operator [cppcoreguidelines-special-member-functions]
  186 | class Subscription {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:201:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  201 |     Subscription& operator=(const Subscription&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> Subscription&
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:227:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  227 |     Subscription subscribe(std::shared_ptr<IObserver> observer) {
      |     ~~~~~~~~~~~~ ^
      |     auto                                                        -> Subscription
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:229:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  229 |             std::lock_guard<std::mutex> lock(mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:236:16: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  236 |         return Subscription([this, observer]() {
      |                ^~~~~~~~~~~~~
      |                {
  237 |             std::lock_guard<std::mutex> lock(mutex_);
  238 |             
  239 |             observers_.erase(
  240 |                 std::remove_if(observers_.begin(), observers_.end(),
  241 |                     [&observer](const std::weak_ptr<IObserver>& wp) {
  242 |                         return wp.lock() == observer;
  243 |                     }),
  244 |                 observers_.end());
  245 |             
  246 |             std::cout << "[RAIISubject] Observer '" << observer->getName() << "' отписан (RAII)\n";
  247 |         });
      |          ~
      |          }
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:236:29: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  236 |         return Subscription([this, observer]() {
      |                             ^
      |                                                -> void
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:237:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  237 |             std::lock_guard<std::mutex> lock(mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:240:17: warning: use a ranges version of this algorithm [modernize-use-ranges]
  240 |                 std::remove_if(observers_.begin(), observers_.end(),
      |                 ^~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~
      |                 std::ranges::remove_if observers_
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:241:21: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  241 |                     [&observer](const std::weak_ptr<IObserver>& wp) {
      |                     ^
      |                                                                     -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:241:65: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
  241 |                     [&observer](const std::weak_ptr<IObserver>& wp) {
      |                                                                 ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:254:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  254 |             std::lock_guard<std::mutex> lock(mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:300:44: warning: the parameter 'observer' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  300 |     void attach(std::shared_ptr<IObserver> observer) {
      |                                            ^
      |                 const                     &
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:311:13: warning: use a ranges version of this algorithm [modernize-use-ranges]
  311 |             std::remove_if(observers_.begin(), observers_.end(),
      |             ^~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~
      |             std::ranges::remove_if observers_
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:312:17: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  312 |                 [&observer](const std::weak_ptr<IObserver>& wp) {
      |                 ^
      |                                                                 -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:312:61: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
  312 |                 [&observer](const std::weak_ptr<IObserver>& wp) {
      |                                                             ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:337:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  337 |     size_t getObserverCount() const {
      |     ~~~~~~ ^
      |     auto                            -> size_t
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:341:13: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  341 |             [](const std::weak_ptr<IObserver>& wp) {
      |             ^
      |                                                    -> bool
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:341:48: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
  341 |             [](const std::weak_ptr<IObserver>& wp) {
      |                                                ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:355:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  355 |     for (int i = 0; i < 5; ++i) {
      |                         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:356:9: warning: 'push_back' is called inside a loop; consider pre-allocating the container capacity before the loop [performance-inefficient-vector-operation]
  355 |     for (int i = 0; i < 5; ++i) {
  356 |         observers.push_back(std::make_shared<SafeObserver>("ThreadObserver" + std::to_string(i)));
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:363:9: warning: 'emplace_back' is called inside a loop; consider pre-allocating the container capacity before the loop [performance-inefficient-vector-operation]
  362 |     for (auto& obs : observers) {
  363 |         threads.emplace_back([subject, obs]() {
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:363:30: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  363 |         threads.emplace_back([subject, obs]() {
      |                              ^
      |                                               -> void
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:365:67: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  365 |             std::this_thread::sleep_for(std::chrono::milliseconds(10));
      |                                                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:370:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  370 |     threads.emplace_back([subject]() {
      |                          ^
      |                                      -> void
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:372:67: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  372 |             std::this_thread::sleep_for(std::chrono::milliseconds(50));
      |                                                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:378:16: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  378 |     for (auto& t : threads) {
      |                ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:407:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  407 |     uint64_t connect(std::function<void(Args...)> callback) {
      |     ~~~~~~~~ ^
      |     auto                                                    -> uint64_t
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:408:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  408 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:410:18: warning: variable name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  410 |         uint64_t id = next_id_++;
      |                  ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:416:30: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  416 |     void disconnect(uint64_t id) {
      |                              ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:417:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  417 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:421:17: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  421 |                 [id](const Slot& slot) {
      |                 ^
      |                                        -> auto
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:427:23: warning: the parameter 'args' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  427 |     void emit(Args... args) const {
      |                       ^
      |               const  &
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:431:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  431 |             std::lock_guard<std::mutex> lock(mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:453:36: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  453 |     auto id1 = dataChanged.connect([](int value, const std::string& name) {
      |                                    ^
      |                                                                           -> void
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:457:34: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  457 |     auto id2 = userLogin.connect([](const std::string& username) {
      |                                  ^
      |                                                                  -> void
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:462:22: warning: 42 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  462 |     dataChanged.emit(42, "температура");
      |                      ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:463:22: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  463 |     dataChanged.emit(100, "давление");
      |                      ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:471:22: warning: 999 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  471 |     dataChanged.emit(999, "после отписки");  // Никто не получит
      |                      ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:478:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  478 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2617:26: note: frame #5: function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 2617 |             _Fancy_ptr = _Allocate_at_least_helper(_Al, _Capacity);
      |                          ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2700:35: note: frame #6: function '_Construct<std::basic_string<char>::_Construct_strategy::_From_string, const char *>' calls function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' here
 2700 |         const pointer _New_ptr  = _Allocate_for_capacity(_Al, _New_capacity); // throws
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2509:9: note: frame #7: function 'basic_string' calls function '_Construct<std::basic_string<char>::_Construct_strategy::_From_string, const char *>' here
 2509 |         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:53:53: note: frame #8: function 'SafeSubject' calls function 'basic_string' here
   53 |     explicit SafeSubject(const std::string& name) : name_(name) {}
      |                                                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xutility:242:66: note: frame #9: function 'construct_at<SafeSubject, const char (&)[5], nullptr>' calls function 'SafeSubject' here
  242 |     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);
      |                                                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xutility:251:9: note: frame #10: function '_Construct_in_place<SafeSubject, const char (&)[5]>' calls function 'construct_at<SafeSubject, const char (&)[5], nullptr>' here
  251 |         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory:2062:13: note: frame #11: function '_Ref_count_obj2<const char (&)[5]>' calls function '_Construct_in_place<SafeSubject, const char (&)[5]>' here
 2062 |             _STD _Construct_in_place(_Storage._Value, _STD forward<_Types>(_Args)...);
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\memory:2738:26: note: frame #12: function 'make_shared<SafeSubject, const char (&)[5]>' calls function '_Ref_count_obj2<const char (&)[5]>' here
 2738 |     const auto _Rx = new _Ref_count_obj2<_Ty>(_STD forward<_Types>(_Args)...);
      |                          ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:156:20: note: frame #13: function 'demonstrateSafeSubject' calls function 'make_shared<SafeSubject, const char (&)[5]>' here
  156 |     auto subject = std::make_shared<SafeSubject>("Main");
      |                    ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:481:5: note: frame #14: function 'main' calls function 'demonstrateSafeSubject' here
  481 |     demonstrateSafeSubject();
      |     ^
D:\Work\Patterns\05-behavioral\lesson_5_1_observer\secure_observer_alternatives.cpp:478:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  478 | int main() {
      | ~~~ ^
      | auto       -> int
Suppressed 122667 warnings (122667 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:22:7: warning: class 'SecurestrategyV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecurestrategyV1 {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:29:131: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecurestrategyV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                        ^~~~~~~~~
      |                                                                                                        '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:35:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecurestrategyV1& operator=(const SecurestrategyV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> SecurestrategyV1&
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:41:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecurestrategyV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:49:7: warning: class 'SecurestrategyV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecurestrategyV2 {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:55:131: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecurestrategyV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                        ^~~~~~~~~
      |                                                                                                        '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:61:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecurestrategyV2& operator=(const SecurestrategyV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> SecurestrategyV2&
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:67:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecurestrategyV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:75:7: warning: class 'Alternativestrategy' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativestrategy {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:82:72: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativestrategy СЃРѕР·РґР°РЅ" << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:87:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativestrategy& operator=(const Alternativestrategy&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Alternativestrategy&
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:93:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativestrategy СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:102:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurestrategyV1 ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:106:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecurestrategyV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:110:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurestrategyV2 ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:114:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecurestrategyV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:118:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativestrategy ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:122:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativestrategy РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:130:183: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ strategy ===" << std::endl;
      |                                                                                                                           ^~~~~~~~~
      |                                                                                                                           '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\05-behavioral\lesson_5_2_strategy\secure_strategy_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp
WARNINGS: 73
ERRORS: 0
================================================================================
149192 warnings generated.
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:24:7: warning: class 'ICommand' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   24 | class ICommand {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:28:5: warning: function 'getDescription' should be marked [[nodiscard]] [modernize-use-nodiscard]
   28 |     virtual std::string getDescription() const = 0;
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:28:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   28 |     virtual std::string getDescription() const = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                               -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:29:5: warning: function 'validate' should be marked [[nodiscard]] [modernize-use-nodiscard]
   29 |     virtual bool validate() const = 0;
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:29:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   29 |     virtual bool validate() const = 0;
      |             ~~~~ ^
      |             auto                  -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:39:41: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   39 |     static const std::set<std::string>& getAllowedCommands() {
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |            auto                                              -> const std::set<std::string>&
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:46:5: warning: function 'isValidArgument' should be marked [[nodiscard]] [modernize-use-nodiscard]
   46 |     bool isValidArgument(const std::string& arg) const {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:46:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   46 |     bool isValidArgument(const std::string& arg) const {
      |          ^
note: this fix will not be applied because it overlaps with another fix
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:46:10: warning: method 'isValidArgument' can be made static [readability-convert-member-functions-to-static]
   46 |     bool isValidArgument(const std::string& arg) const {
      |          ^                                       ~~~~~
      |     static 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:53:22: warning: pass by value and use std::move [modernize-pass-by-value]
    3 |     SafeShellCommand(const std::string& cmd, const std::vector<std::string>& args)
      |                      ^~~~~~~~~~~~~~~~~~
      |                      std::string 
    4 |         : command_(cmd), args_(args) {}
      |                       
      |                    std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:56:5: warning: function 'validate' should be marked [[nodiscard]] [modernize-use-nodiscard]
   56 |     bool validate() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:56:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   56 |     bool validate() const override {
      |     ~~~~ ^
      |     auto                  -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:58:34: warning: use 'contains' to check for membership [readability-container-contains]
   58 |         if (getAllowedCommands().find(command_) == getAllowedCommands().end()) {
      |                                  ^~~~           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             !                    contains
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:89:5: warning: function 'getDescription' should be marked [[nodiscard]] [modernize-use-nodiscard]
   89 |     std::string getDescription() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:89:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   89 |     std::string getDescription() const override {
      |     ~~~~~~~~~~~ ^
      |     auto                               -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:125:12: warning: enum 'Permission' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  125 | enum class Permission {
      |            ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:137:19: warning: pass by value and use std::move [modernize-pass-by-value]
  137 |     SecureContext(const std::string& user, Permission perm)
      |                   ^~~~~~~~~~~~~~~~~~
      |                   std::string 
  138 |         : username_(user), permission_(perm) {}
      |                         
      |                     std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:140:5: warning: function 'getUsername' should be marked [[nodiscard]] [modernize-use-nodiscard]
  140 |     std::string getUsername() const { return username_; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:140:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 |     std::string getUsername() const { return username_; }
      |     ~~~~~~~~~~~ ^
      |     auto                            -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:141:5: warning: function 'getPermission' should be marked [[nodiscard]] [modernize-use-nodiscard]
  141 |     Permission getPermission() const { return permission_; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:141:16: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  141 |     Permission getPermission() const { return permission_; }
      |     ~~~~~~~~~~ ^
      |     auto                             -> Permission
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:151:5: warning: function 'checkPermission' should be marked [[nodiscard]] [modernize-use-nodiscard]
  151 |     bool checkPermission() const {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:151:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     bool checkPermission() const {
      |     ~~~~ ^
      |     auto                         -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:156:23: warning: pass by value and use std::move [modernize-pass-by-value]
  156 |     PrivilegedCommand(const std::string& action, 
      |                       ^~~~~~~~~~~~~~~~~~
      |                       std::string 
  157 |                      Permission required,
  158 |                      std::shared_ptr<SecureContext> ctx)
  159 |         : action_(action), required_permission_(required), context_(ctx) {}
      |                         
      |                   std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:158:22: warning: pass by value and use std::move [modernize-pass-by-value]
  158 |                      std::shared_ptr<SecureContext> ctx)
      |                      ^
  159 |         : action_(action), required_permission_(required), context_(ctx) {}
      |                                                                        
      |                                                                     std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:159:69: warning: parameter 'ctx' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    3 |         : action_(action), required_permission_(required), context_(ctx) {}
      |                                                                     ^  
      |                                                                     std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:161:5: warning: function 'validate' should be marked [[nodiscard]] [modernize-use-nodiscard]
  161 |     bool validate() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:161:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  161 |     bool validate() const override {
      |     ~~~~ ^
      |     auto                  -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:178:5: warning: function 'getDescription' should be marked [[nodiscard]] [modernize-use-nodiscard]
  178 |     std::string getDescription() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:178:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  178 |     std::string getDescription() const override {
      |     ~~~~~~~~~~~ ^
      |     auto                               -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:215:22: warning: 2 adjacent parameters of 'SensitiveCommand' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  215 |     SensitiveCommand(const std::string& action, const std::string& data)
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:215:41: note: the first parameter in the range is 'action'
  215 |     SensitiveCommand(const std::string& action, const std::string& data)
      |                                         ^~~~~~
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:215:68: note: the last parameter in the range is 'data'
  215 |     SensitiveCommand(const std::string& action, const std::string& data)
      |                                                                    ^~~~
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:215:22: warning: pass by value and use std::move [modernize-pass-by-value]
  215 |     SensitiveCommand(const std::string& action, const std::string& data)
      |                      ^~~~~~~~~~~~~~~~~~
      |                      std::string 
  216 |         : action_(action), sensitive_data_(data) {}
      |                         
      |                   std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:215:49: warning: pass by value and use std::move [modernize-pass-by-value]
  215 |     SensitiveCommand(const std::string& action, const std::string& data)
      |                                                 ^~~~~~~~~~~~~~~~~~
      |                                                 std::string 
  216 |         : action_(action), sensitive_data_(data) {}
      |                                                
      |                                            std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:223:5: warning: function 'validate' should be marked [[nodiscard]] [modernize-use-nodiscard]
  223 |     bool validate() const override { return true; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:223:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  223 |     bool validate() const override { return true; }
      |     ~~~~ ^
      |     auto                  -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:225:5: warning: function 'getDescription' should be marked [[nodiscard]] [modernize-use-nodiscard]
  225 |     std::string getDescription() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:225:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  225 |     std::string getDescription() const override {
      |     ~~~~~~~~~~~ ^
      |     auto                               -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:231:5: warning: function 'getAuditLog' should be marked [[nodiscard]] [modernize-use-nodiscard]
  231 |     std::string getAuditLog() const {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:231:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  231 |     std::string getAuditLog() const {
      |     ~~~~~~~~~~~ ^
      |     auto                            -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:242:40: warning: the parameter 'cmd' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  242 |     void add(std::shared_ptr<ICommand> cmd) {
      |                                        ^
      |              const                    &
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:256:14: warning: 'auto &cmd' can be declared as 'const auto &cmd' [readability-qualified-auto]
  256 |         for (auto& cmd : history_) {
      |              ^
      |              const 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:298:35: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  298 |     static std::set<std::string>& getUsedNonces() {
      |            ~~~~~~~~~~~~~~~~~~~~~~ ^
      |            auto                                   -> std::set<std::string>&
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:303:5: warning: function 'generateNonce' should be marked [[nodiscard]] [modernize-use-nodiscard]
  303 |     std::string generateNonce() const {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:303:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  303 |     std::string generateNonce() const {
      |                 ^
note: this fix will not be applied because it overlaps with another fix
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:303:17: warning: method 'generateNonce' can be made static [readability-convert-member-functions-to-static]
  303 |     std::string generateNonce() const {
      |                 ^               ~~~~~
      |     static 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:304:35: warning: variable name 'rd' is too short, expected at least 3 characters [readability-identifier-length]
  304 |         static std::random_device rd;
      |                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:306:55: warning: 999999 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  306 |         static std::uniform_int_distribution<> dis(0, 999999);
      |                                                       ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:312:5: warning: function 'computeSignature' should be marked [[nodiscard]] [modernize-use-nodiscard]
  312 |     std::string computeSignature() const {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:312:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  312 |     std::string computeSignature() const {
      |     ~~~~~~~~~~~ ^
      |     auto                                 -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:319:19: warning: pass by value and use std::move [modernize-pass-by-value]
  319 |     SignedCommand(const std::string& action)
      |                   ^~~~~~~~~~~~~~~~~~
      |                   std::string 
  320 |         : action_(action),
      |                         
      |                   std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:325:5: warning: function 'validate' should be marked [[nodiscard]] [modernize-use-nodiscard]
  325 |     bool validate() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:325:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  325 |     bool validate() const override {
      |     ~~~~ ^
      |     auto                  -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:327:29: warning: use 'contains' to check for membership [readability-container-contains]
  327 |         if (getUsedNonces().find(nonce_) != getUsedNonces().end()) {
      |                             ^~~~         ~~~~~~~~~~~~~~~~~~~~~~~~
      |                             contains
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:335:27: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  335 |         if (age.count() > 5) {
      |                           ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:361:5: warning: function 'getDescription' should be marked [[nodiscard]] [modernize-use-nodiscard]
  361 |     std::string getDescription() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:361:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  361 |     std::string getDescription() const override {
      |     ~~~~~~~~~~~ ^
      |     auto                               -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:366:5: warning: function 'copy' should be marked [[nodiscard]] [modernize-use-nodiscard]
  366 |     SignedCommand copy() const = delete;
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:366:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  366 |     SignedCommand copy() const = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                       -> SignedCommand
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:400:5: warning: function 'countTotalCommands' should be marked [[nodiscard]] [modernize-use-nodiscard]
  400 |     size_t countTotalCommands() const {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:400:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  400 |     size_t countTotalCommands() const {
      |     ~~~~~~ ^
      |     auto                              -> size_t
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:402:14: warning: 'auto &cmd' can be declared as 'const auto &cmd' [readability-qualified-auto]
  402 |         for (auto& cmd : commands_) {
      |              ^
      |              const 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:413:34: warning: pass by value and use std::move [modernize-pass-by-value]
  413 |     explicit BoundedMacroCommand(const std::string& name, size_t depth = 0)
      |                                  ^~~~~~~~~~~~~~~~~~
      |                                  std::string 
  414 |         : name_(name), depth_(depth) {}
      |                     
      |                 std::move( )
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:416:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  416 |     bool add(std::shared_ptr<ICommand> cmd) {
      |     ~~~~ ^
      |     auto                                    -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:416:40: warning: the parameter 'cmd' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  416 |     bool add(std::shared_ptr<ICommand> cmd) {
      |                                        ^
      |              const                    &
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:438:5: warning: function 'validate' should be marked [[nodiscard]] [modernize-use-nodiscard]
  438 |     bool validate() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:438:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  438 |     bool validate() const override {
      |     ~~~~ ^
      |     auto                  -> bool
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:455:5: warning: function 'getDescription' should be marked [[nodiscard]] [modernize-use-nodiscard]
  455 |     std::string getDescription() const override {
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:455:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  455 |     std::string getDescription() const override {
      |     ~~~~~~~~~~~ ^
      |     auto                               -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:465:25: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  465 |     for (int i = 0; i < 10; ++i) {
      |                         ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:472:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  472 |     for (int i = 0; i < 5; ++i) {
      |                         ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:477:25: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  477 |     for (int i = 0; i < 10; ++i) {
      |                         ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:493:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  493 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2617:26: note: frame #5: function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 2617 |             _Fancy_ptr = _Allocate_at_least_helper(_Al, _Capacity);
      |                          ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2700:35: note: frame #6: function '_Construct<std::basic_string<char>::_Construct_strategy::_From_string, const char *>' calls function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' here
 2700 |         const pointer _New_ptr  = _Allocate_for_capacity(_Al, _New_capacity); // throws
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2509:9: note: frame #7: function 'basic_string' calls function '_Construct<std::basic_string<char>::_Construct_strategy::_From_string, const char *>' here
 2509 |         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:54:11: note: frame #8: function 'SafeShellCommand' calls function 'basic_string' here
   54 |         : command_(cmd), args_(args) {}
      |           ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:98:22: note: frame #9: function 'demonstrateSafeShellCommand' calls function 'SafeShellCommand' here
   98 |     SafeShellCommand cmd1("ls", {"-la"});
      |                      ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:496:5: note: frame #10: function 'main' calls function 'demonstrateSafeShellCommand' here
  496 |     demonstrateSafeShellCommand();
      |     ^
D:\Work\Patterns\05-behavioral\lesson_5_3_command\secure_command_alternatives.cpp:493:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  493 | int main() {
      | ~~~ ^
      | auto       -> int
Suppressed 149114 warnings (149114 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp
WARNINGS: 63
ERRORS: 0
================================================================================
99862 warnings generated.
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:289:30)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:290:41: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
  290 |             std::cout << "Thread " << i << " пытается подключиться\n";
      |                                         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:289:30)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:289:30)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:289:30)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:93:30)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:95:45: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
   95 |                 std::cout << "Thread " << i << ": ";
      |                                             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:93:30)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:93:30)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:93:30)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:22:7: warning: class 'IState' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class IState {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:26:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
   26 |     virtual std::string getName() const = 0;
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:26:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   26 |     virtual std::string getName() const = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:35:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
   35 |     std::string getName() const override { return "Locked"; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:35:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     std::string getName() const override { return "Locked"; }
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:44:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
   44 |     std::string getName() const override { return "Unlocked"; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:44:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   44 |     std::string getName() const override { return "Unlocked"; }
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:57:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   57 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:62:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   62 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:68:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   68 |     std::string getStateName() const {
      |     ~~~~~~~~~~~ ^
      |     auto                             -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:69:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   69 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   82 |     threads.emplace_back([&context]() {
      |                          ^
      |                                       -> void
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:83:29: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   83 |         for (int i = 0; i < 50; ++i) {
      |                             ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:85:67: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   85 |             std::this_thread::sleep_for(std::chrono::milliseconds(10));
      |                                                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:87:67: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   87 |             std::this_thread::sleep_for(std::chrono::milliseconds(10));
      |                                                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:93:30: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   93 |         threads.emplace_back([&context, i]() {
      |                              ^
      |                                              -> void
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:94:33: warning: 30 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   94 |             for (int j = 0; j < 30; ++j) {
      |                                 ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:97:71: warning: 15 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   97 |                 std::this_thread::sleep_for(std::chrono::milliseconds(15));
      |                                                                       ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:102:16: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  102 |     for (auto& t : threads) t.join();
      |                ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:102:28: warning: statement should be inside braces [readability-braces-around-statements]
  102 |     for (auto& t : threads) t.join();
      |                            ^         
      |                             {
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:112:12: warning: enum 'OrderStatus' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  112 | enum class OrderStatus {
      |            ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:128:64: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  128 |     static const std::map<OrderStatus, std::set<OrderStatus>>& getAllowedTransitions() {
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |            auto                                                                        -> const std::map<OrderStatus, std::set<OrderStatus>>&
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:139:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  139 |     bool isTransitionAllowed(OrderStatus from, OrderStatus to) const {
      |          ^
note: this fix will not be applied because it overlaps with another fix
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:139:10: warning: method 'isTransitionAllowed' can be made static [readability-convert-member-functions-to-static]
  139 |     bool isTransitionAllowed(OrderStatus from, OrderStatus to) const {
      |          ^                                                     ~~~~~
      |     static 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:139:30: warning: 2 adjacent parameters of 'isTransitionAllowed' of similar type ('OrderStatus') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  139 |     bool isTransitionAllowed(OrderStatus from, OrderStatus to) const {
      |                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:139:42: note: the first parameter in the range is 'from'
  139 |     bool isTransitionAllowed(OrderStatus from, OrderStatus to) const {
      |                                          ^~~~
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:139:60: note: the last parameter in the range is 'to'
  139 |     bool isTransitionAllowed(OrderStatus from, OrderStatus to) const {
      |                                                            ^~
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:139:60: warning: parameter name 'to' is too short, expected at least 3 characters [readability-identifier-length]
  139 |     bool isTransitionAllowed(OrderStatus from, OrderStatus to) const {
      |                                                            ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:141:14: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  141 |         auto it = transitions.find(from);
      |              ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:142:37: warning: statement should be inside braces [readability-braces-around-statements]
  142 |         if (it == transitions.end()) return false;
      |                                     ^             
      |                                      {
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:143:27: warning: use 'contains' to check for membership [readability-container-contains]
  143 |         return it->second.find(to) != it->second.end();
      |                           ^~~~     ~~~~~~~~~~~~~~~~~~~
      |                           contains
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:158:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  158 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:166:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  166 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:173:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  173 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:180:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  180 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:192:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  192 |     OrderStatus getState() const {
      |     ~~~~~~~~~~~ ^
      |     auto                         -> OrderStatus
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:193:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  193 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:244:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  244 |     bool connect() {
      |     ~~~~ ^
      |     auto           -> bool
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:249:67: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  249 |             std::this_thread::sleep_for(std::chrono::milliseconds(100));
      |                                                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:260:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  260 |     bool disconnect() {
      |     ~~~~ ^
      |     auto              -> bool
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:264:67: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  264 |             std::this_thread::sleep_for(std::chrono::milliseconds(50));
      |                                                                   ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:275:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  275 |     ConnectionState getState() const {
      |     ~~~~~~~~~~~~~~~ ^
      |     auto                             -> ConnectionState
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:288:25: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  288 |     for (int i = 0; i < 5; ++i) {
      |                         ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:289:9: warning: 'emplace_back' is called inside a loop; consider pre-allocating the container capacity before the loop [performance-inefficient-vector-operation]
  288 |     for (int i = 0; i < 5; ++i) {
  289 |         threads.emplace_back([&conn, i]() {
      |         ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:289:30: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  289 |         threads.emplace_back([&conn, i]() {
      |                              ^
      |                                           -> void
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:295:16: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  295 |     for (auto& t : threads) t.join();
      |                ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:295:28: warning: statement should be inside braces [readability-braces-around-statements]
  295 |     for (auto& t : threads) t.join();
      |                            ^         
      |                             {
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:307:7: warning: class 'State' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  307 | class State {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:312:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
  312 |     virtual std::string getName() const = 0;
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:312:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  312 |     virtual std::string getName() const = 0;
      |             ~~~~~~~~~~~ ^
      |             auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:315:7: warning: class 'IdleState' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  315 | class IdleState : public State {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:325:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
  325 |     std::string getName() const override { return "Idle"; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:325:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  325 |     std::string getName() const override { return "Idle"; }
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:327:5: warning: an exception may be thrown in function '~IdleState' which should not throw exceptions [bugprone-exception-escape]
  327 |     ~IdleState() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:328:19: note: frame #6: function '~IdleState' calls function 'operator<<<std::char_traits<char>>' here
  328 |         std::cout << "[Idle] Удален\n";
      |                   ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:327:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,modernize-use-override]
  327 |     ~IdleState() {
      |     ^
      |                  override
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:332:7: warning: class 'WorkingState' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  332 | class WorkingState : public State {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:342:5: warning: function 'getName' should be marked [[nodiscard]] [modernize-use-nodiscard]
  342 |     std::string getName() const override { return "Working"; }
      |     ^
      |     [[nodiscard]] 
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:342:17: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  342 |     std::string getName() const override { return "Working"; }
      |     ~~~~~~~~~~~ ^
      |     auto                        -> std::string
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:344:5: warning: an exception may be thrown in function '~WorkingState' which should not throw exceptions [bugprone-exception-escape]
  344 |     ~WorkingState() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:345:19: note: frame #6: function '~WorkingState' calls function 'operator<<<std::char_traits<char>>' here
  345 |         std::cout << "[Working] Удален\n";
      |                   ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:344:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,modernize-use-override]
  344 |     ~WorkingState() {
      |     ^
      |                     override
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:349:7: warning: class 'RAIIStateContext' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  349 | class RAIIStateContext {
      |       ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:397:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  397 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<std::thread>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:829:43: note: frame #5: function '_Emplace_reallocate<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26)>' calls function '_Allocate_at_least_helper<std::allocator<std::thread>>' here
  829 |         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                           ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:783:17: note: frame #6: function '_Emplace_one_at_back<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26)>' calls function '_Emplace_reallocate<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26)>' here
  783 |         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:862:24: note: frame #7: function 'emplace_back<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26)>' calls function '_Emplace_one_at_back<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26)>' here
  862 |         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
      |                        ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:5: note: frame #8: function 'demonstrateThreadSafeState' calls function 'emplace_back<(lambda at D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:82:26)>' here
   82 |     threads.emplace_back([&context]() {
      |     ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:400:5: note: frame #9: function 'main' calls function 'demonstrateThreadSafeState' here
  400 |     demonstrateThreadSafeState();
      |     ^
D:\Work\Patterns\05-behavioral\lesson_5_4_state\secure_state_alternatives.cpp:397:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  397 | int main() {
      | ~~~ ^
      | auto       -> int
Suppressed 99789 warnings (99789 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:22:7: warning: class 'Securesmart_pointersV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securesmart_pointersV1 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:29:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securesmart_pointersV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:35:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securesmart_pointersV1& operator=(const Securesmart_pointersV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securesmart_pointersV1&
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:41:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securesmart_pointersV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:49:7: warning: class 'Securesmart_pointersV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securesmart_pointersV2 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:55:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securesmart_pointersV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:61:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securesmart_pointersV2& operator=(const Securesmart_pointersV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securesmart_pointersV2&
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:67:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securesmart_pointersV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:75:7: warning: class 'Alternativesmart_pointers' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativesmart_pointers {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:82:78: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativesmart_pointers СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:87:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativesmart_pointers& operator=(const Alternativesmart_pointers&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                   -> Alternativesmart_pointers&
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:93:92: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativesmart_pointers СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:102:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securesmart_pointersV1 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:106:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securesmart_pointersV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:110:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securesmart_pointersV2 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:114:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securesmart_pointersV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:118:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativesmart_pointers ===" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:122:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativesmart_pointers РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:130:189: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ smart_pointers ===" << std::endl;
      |                                                                                                                                 ^~~~~~~~~
      |                                                                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_1_smart_pointers\secure_smart_pointers_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:22:7: warning: class 'Securemove_semanticsV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securemove_semanticsV1 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:29:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securemove_semanticsV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:35:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securemove_semanticsV1& operator=(const Securemove_semanticsV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securemove_semanticsV1&
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:41:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securemove_semanticsV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:49:7: warning: class 'Securemove_semanticsV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securemove_semanticsV2 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:55:137: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securemove_semanticsV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                              ^~~~~~~~~
      |                                                                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:61:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securemove_semanticsV2& operator=(const Securemove_semanticsV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Securemove_semanticsV2&
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:67:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securemove_semanticsV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:75:7: warning: class 'Alternativemove_semantics' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativemove_semantics {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:82:78: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativemove_semantics СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:87:32: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativemove_semantics& operator=(const Alternativemove_semantics&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                   -> Alternativemove_semantics&
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:93:92: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativemove_semantics СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:102:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securemove_semanticsV1 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:106:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securemove_semanticsV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:110:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securemove_semanticsV2 ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:114:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securemove_semanticsV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:118:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativemove_semantics ===" << std::endl;
      |                                                                                           ^~~~~~~~~
      |                                                                                           '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:122:119: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativemove_semantics РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:130:189: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ move_semantics ===" << std::endl;
      |                                                                                                                                 ^~~~~~~~~
      |                                                                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_2_move_semantics\secure_move_semantics_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:22:7: warning: class 'SecurecrtpV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecurecrtpV1 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:29:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecurecrtpV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:35:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecurecrtpV1& operator=(const SecurecrtpV1&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> SecurecrtpV1&
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:41:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecurecrtpV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:49:7: warning: class 'SecurecrtpV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecurecrtpV2 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:55:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecurecrtpV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:61:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecurecrtpV2& operator=(const SecurecrtpV2&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> SecurecrtpV2&
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:67:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecurecrtpV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:75:7: warning: class 'Alternativecrtp' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativecrtp {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:82:68: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativecrtp СЃРѕР·РґР°РЅ" << std::endl;
      |                                                        ^~~~~~~~~
      |                                                        '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:87:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativecrtp& operator=(const Alternativecrtp&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> Alternativecrtp&
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:93:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativecrtp СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:102:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurecrtpV1 ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:106:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecurecrtpV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:110:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurecrtpV2 ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:114:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecurecrtpV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:118:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativecrtp ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:122:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativecrtp РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:130:179: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ crtp ===" << std::endl;
      |                                                                                                                       ^~~~~~~~~
      |                                                                                                                       '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_3_crtp\secure_crtp_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:22:7: warning: class 'Securetype_erasureV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securetype_erasureV1 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:29:135: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securetype_erasureV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                            ^~~~~~~~~
      |                                                                                                            '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:35:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securetype_erasureV1& operator=(const Securetype_erasureV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                         -> Securetype_erasureV1&
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:41:87: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securetype_erasureV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:49:7: warning: class 'Securetype_erasureV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securetype_erasureV2 {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:55:135: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securetype_erasureV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                            ^~~~~~~~~
      |                                                                                                            '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:61:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securetype_erasureV2& operator=(const Securetype_erasureV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                         -> Securetype_erasureV2&
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:67:87: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securetype_erasureV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:75:7: warning: class 'Alternativetype_erasure' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativetype_erasure {
      |       ^
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:82:76: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativetype_erasure СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                ^~~~~~~~~
      |                                                                '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:87:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativetype_erasure& operator=(const Alternativetype_erasure&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                               -> Alternativetype_erasure&
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:93:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativetype_erasure СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:102:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securetype_erasureV1 ===" << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:106:114: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securetype_erasureV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:110:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securetype_erasureV2 ===" << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:114:114: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securetype_erasureV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:118:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativetype_erasure ===" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:122:117: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativetype_erasure РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:130:187: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ type_erasure ===" << std::endl;
      |                                                                                                                               ^~~~~~~~~
      |                                                                                                                               '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\06-modern-cpp\lesson_6_4_type_erasure\secure_type_erasure_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp
WARNINGS: 95
ERRORS: 0
================================================================================
138496 warnings generated.
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:107:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:110:59: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
  110 |             std::cout << "Потреблено: " << item << "\n";
      |                                                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:107:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:107:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:107:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:192:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:202:56: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
  202 |         std::cout << "Потреблено: " << count << " элементов\n";
      |                                              ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:192:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:192:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:192:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:273:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<std::shared_ptr<Message> *>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\deque:1563:31: note: frame #5: function '_Growmap' calls function '_Allocate_at_least_helper<std::allocator<std::shared_ptr<Message> *>>' here
 1563 |         _Mapptr _Newmap     = _Allocate_at_least_helper(_Almap, _Allocsize);
      |                               ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\deque:1072:13: note: frame #6: function '_Emplace_back_internal<std::shared_ptr<Message>>' calls function '_Growmap' here
 1072 |             _Growmap(1);
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\deque:1181:9: note: frame #7: function 'push_back' calls function '_Emplace_back_internal<std::shared_ptr<Message>>' here
 1181 |         _Emplace_back_internal(_STD move(_Val));
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\queue:120:9: note: frame #8: function 'push' calls function 'push_back' here
  120 |         c.push_back(_STD move(_Val));
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:227:9: note: frame #9: function 'push' calls function 'push' here
  227 |         queue_.push(std::move(item));
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:276:13: note: frame #10: function 'operator()' calls function 'push' here
  276 |             queue.push(msg);
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #11: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:273:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #12: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:273:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:273:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:283:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:285:62: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
  285 |             std::cout << "Обработка: " << msg->data << "\n";
      |                                                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:283:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:283:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:283:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:376:67: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
  376 |                 std::cout << "Producer " << p << " → " << value << "\n";
      |                                                                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:385:32)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:387:69: note: frame #6: function 'operator()' calls function 'operator<<<std::char_traits<char>>' here
  387 |                 std::cout << "  Consumer " << c << " ← " << *item << "\n";
      |                                                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #7: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:385:32)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #8: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:385:32)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:385:32)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:471:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<PriorityProducerConsumerQueue<std::basic_string<char>>::Item>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:829:43: note: frame #5: function '_Emplace_reallocate<PriorityProducerConsumerQueue<std::basic_string<char>>::Item>' calls function '_Allocate_at_least_helper<std::allocator<PriorityProducerConsumerQueue<std::basic_string<char>>::Item>>' here
  829 |         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                           ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:783:17: note: frame #6: function '_Emplace_one_at_back<PriorityProducerConsumerQueue<std::basic_string<char>>::Item>' calls function '_Emplace_reallocate<PriorityProducerConsumerQueue<std::basic_string<char>>::Item>' here
  783 |         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:876:9: note: frame #7: function 'push_back' calls function '_Emplace_one_at_back<PriorityProducerConsumerQueue<std::basic_string<char>>::Item>' here
  876 |         _Emplace_one_at_back(_STD move(_Val));
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\queue:378:9: note: frame #8: function 'push' calls function 'push_back' here
  378 |         c.push_back(_STD move(_Val));
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:439:9: note: frame #9: function 'push' calls function 'push' here
  439 |         queue_.push({std::move(data), priority});
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:472:9: note: frame #10: function 'operator()' calls function 'push' here
  472 |         queue.push("Обычная задача 1", 1);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #11: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:471:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #12: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:471:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:471:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:481:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<char>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2617:26: note: frame #5: function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' calls function '_Allocate_at_least_helper<std::allocator<char>>' here
 2617 |             _Fancy_ptr = _Allocate_at_least_helper(_Al, _Capacity);
      |                          ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2700:35: note: frame #6: function '_Construct<std::basic_string<char>::_Construct_strategy::_From_string, const char *>' calls function '_Allocate_for_capacity<std::basic_string<char>::_Allocation_policy::_At_least>' here
 2700 |         const pointer _New_ptr  = _Allocate_for_capacity(_Al, _New_capacity); // throws
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xstring:2509:9: note: frame #7: function 'basic_string' calls function '_Construct<std::basic_string<char>::_Construct_strategy::_From_string, const char *>' here
 2509 |         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:414:12: note: frame #8: function 'Item' calls function 'basic_string' here
  414 |     struct Item {
      |            ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:451:21: note: frame #9: function 'pop' calls function 'Item' here
  451 |         auto item = queue_.top();
      |                     ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:484:16: note: frame #10: function 'operator()' calls function 'pop' here
  484 |         while (queue.pop(task, priority)) {
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #11: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:481:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #12: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:481:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:481:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:56:35: warning: an exception may be thrown in function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:94:26)>, 0ULL>' which should not throw exceptions [bugprone-exception-escape]
   56 |     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept /* terminates */ {
      |                                   ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<int *>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\deque:1563:31: note: frame #5: function '_Growmap' calls function '_Allocate_at_least_helper<std::allocator<int *>>' here
 1563 |         _Mapptr _Newmap     = _Allocate_at_least_helper(_Almap, _Allocsize);
      |                               ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\deque:1072:13: note: frame #6: function '_Emplace_back_internal<int>' calls function '_Growmap' here
 1072 |             _Growmap(1);
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\deque:1181:9: note: frame #7: function 'push_back' calls function '_Emplace_back_internal<int>' here
 1181 |         _Emplace_back_internal(_STD move(_Val));
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\queue:120:9: note: frame #8: function 'push' calls function 'push_back' here
  120 |         c.push_back(_STD move(_Val));
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:52:9: note: frame #9: function 'push' calls function 'push' here
   52 |         queue_.push(std::move(item));
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:96:17: note: frame #10: function 'operator()' calls function 'push' here
   96 |             if (queue.push(i, std::chrono::milliseconds(100))) {
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\type_traits:1729:12: note: frame #11: function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:94:26)>' calls function 'operator()' here
 1729 |     return static_cast<_Callable&&>(_Obj)();
      |            ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\thread:60:9: note: frame #12: function '_Invoke<std::tuple<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:94:26)>, 0ULL>' calls function 'invoke<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:94:26)>' here
   60 |         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals_core.h:1946:20: note: expanded from macro '_STD'
 1946 | #define _STD       ::std::
      |                    ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:24:7: warning: class 'SafeBoundedQueue' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   24 | class SafeBoundedQueue {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:38:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   38 |     SafeBoundedQueue& operator=(const SafeBoundedQueue&) = delete;
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> SafeBoundedQueue&
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:40:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   40 |     bool push(T item, std::chrono::milliseconds timeout = std::chrono::milliseconds::max()) {
      |     ~~~~ ^
      |     auto                                                                                    -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:44:51: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   44 |         if (!cv_not_full_.wait_for(lock, timeout, [this] { 
      |                                                   ^
      |                                                          -> auto
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:50:23: warning: statement should be inside braces [readability-braces-around-statements]
   50 |         if (finished_) return false;
      |                       ^             
      |                        {
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:57:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   57 |     bool pop(T& item, std::chrono::milliseconds timeout = std::chrono::milliseconds::max()) {
      |     ~~~~ ^
      |     auto                                                                                    -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:61:52: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   61 |         if (!cv_not_empty_.wait_for(lock, timeout, [this] { 
      |                                                    ^
      |                                                           -> auto
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:67:28: warning: statement should be inside braces [readability-braces-around-statements]
   67 |         if (queue_.empty()) return false;
      |                            ^             
      |                             {
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:76:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   76 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:82:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   82 |     size_t size() const {
      |     ~~~~~~ ^
      |     auto                -> size_t
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:83:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
   83 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:91:33: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   91 |     SafeBoundedQueue<int> queue(10);  // Максимум 10 элементов
      |                                 ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:94:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
   94 |     std::thread producer([&queue]() {
      |                          ^
      |                                     -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:95:29: warning: 20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   95 |         for (int i = 0; i < 20; ++i) {
      |                             ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:96:57: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   96 |             if (queue.push(i, std::chrono::milliseconds(100))) {
      |                                                         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:101:67: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  101 |             std::this_thread::sleep_for(std::chrono::milliseconds(50));
      |                                                                   ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:107:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  107 |     std::thread consumer([&queue]() {
      |                          ^
      |                                     -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:108:13: warning: variable 'item' is not initialized [cppcoreguidelines-init-variables]
  108 |         int item;
      |             ^   
      |                  = 0
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:109:58: warning: 200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  109 |         while (queue.pop(item, std::chrono::milliseconds(200))) {
      |                                                          ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:111:67: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  111 |             std::this_thread::sleep_for(std::chrono::milliseconds(100));
      |                                                                   ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:128:7: warning: constructor does not initialize these fields: buffer_, padding_ [cppcoreguidelines-pro-type-member-init]
  128 | class LockFreeRingBuffer {
      |       ^
  129 | private:
  130 |     std::array<T, N> buffer_;
      |                             
      |                             {}
  131 |     std::atomic<size_t> head_{0};  // Для producer
  132 |     std::atomic<size_t> tail_{0};  // Для consumer
  133 |     
  134 |     // Padding для избежания false sharing
  135 |     char padding_[64];
      |                      
      |                      {}
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:128:7: warning: constructor does not initialize these fields: padding_ [cppcoreguidelines-pro-type-member-init]
  128 | class LockFreeRingBuffer {
      |       ^
  129 | private:
  130 |     std::array<T, N> buffer_;
  131 |     std::atomic<size_t> head_{0};  // Для producer
  132 |     std::atomic<size_t> tail_{0};  // Для consumer
  133 |     
  134 |     // Padding для избежания false sharing
  135 |     char padding_[64];
      |                      
      |                      {}
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:135:5: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,modernize-avoid-c-arrays]
  135 |     char padding_[64];
      |     ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:135:19: warning: 64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  135 |     char padding_[64];
      |                   ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:138:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  138 |     bool push(const T& item) {
      |     ~~~~ ^
      |     auto                     -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:146:9: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  146 |         buffer_[current_head] = item;
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:151:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 |     bool pop(T& item) {
      |     ~~~~ ^
      |     auto              -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:158:16: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  158 |         item = buffer_[current_tail];
      |                ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:163:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  163 |     bool empty() const {
      |     ~~~~ ^
      |     auto               -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:168:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 |     size_t size() const {
      |     ~~~~~~ ^
      |     auto                -> size_t
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:169:16: warning: variable name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  169 |         size_t h = head_.load(std::memory_order_acquire);
      |                ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:170:16: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  170 |         size_t t = tail_.load(std::memory_order_acquire);
      |                ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:182:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  182 |     std::thread producer([&buffer, &done]() {
      |                          ^
      |                                             -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:183:29: warning: 1000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  183 |         for (int i = 0; i < 1000; ++i) {
      |                             ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:192:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  192 |     std::thread consumer([&buffer, &done]() {
      |                          ^
      |                                             -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:193:13: warning: variable 'item' is not initialized [cppcoreguidelines-init-variables]
  193 |         int item;
      |             ^   
      |                  = 0
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:226:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  226 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:231:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  231 |     std::shared_ptr<T> pop(std::chrono::milliseconds timeout = std::chrono::milliseconds::max()) {
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                                         -> std::shared_ptr<T>
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:234:42: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  234 |         if (!cv_.wait_for(lock, timeout, [this] { 
      |                                          ^
      |                                                 -> auto
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:240:28: warning: statement should be inside braces [readability-braces-around-statements]
  240 |         if (queue_.empty()) return nullptr;
      |                            ^               
      |                             {
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:248:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  248 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:254:8: warning: class 'Message' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
  254 | struct Message {
      |        ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:258:17: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  258 |     Message(int i, std::string d) : id(i), data(std::move(d)) {
      |                 ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:258:32: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]
  258 |     Message(int i, std::string d) : id(i), data(std::move(d)) {
      |                                ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:262:5: warning: an exception may be thrown in function '~Message' which should not throw exceptions [bugprone-exception-escape]
  262 |     ~Message() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xiosbase:174:13: note: frame #0: unhandled exception of type 'std::ios_base::failure' may be thrown in function 'clear' here
  174 |             _THROW(failure(_Msg));
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:40:9: note: frame #1: function 'clear' calls function 'clear' here
   40 |         ios_base::clear(_State | (_Mystrbuf ? ios_base::goodbit : ios_base::badbit), _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ios:51:9: note: frame #2: function 'setstate' calls function 'clear' here
   51 |         clear(rdstate() | _State, _Reraise);
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:571:17: note: frame #3: function 'flush' calls function 'setstate' here
  571 |                 _CATCH_IO_END
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\iosfwd:30:9: note: expanded from macro '_CATCH_IO_END'
   30 |         _Myios::setstate(ios_base::badbit, true); /* set badbit and rethrow */ \
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:108:13: note: frame #4: function 'sentry' calls function 'flush' here
  108 |             _Tied->flush();
      |             ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\ostream:774:34: note: frame #5: function 'operator<<<std::char_traits<char>>' calls function 'sentry' here
  774 |     const typename _Myos::sentry _Ok(_Ostr);
      |                                  ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:263:42: note: frame #6: function '~Message' calls function 'operator<<<std::char_traits<char>>' here
  263 |         std::cout << "  [Message " << id << "] Удалено\n";
      |                                          ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:273:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  273 |     std::thread producer([&queue]() {
      |                          ^
      |                                     -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:274:29: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  274 |         for (int i = 0; i < 5; ++i) {
      |                             ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:277:67: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  277 |             std::this_thread::sleep_for(std::chrono::milliseconds(100));
      |                                                                   ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:283:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  283 |     std::thread consumer([&queue]() {
      |                          ^
      |                                     -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:284:63: warning: 500 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  284 |         while (auto msg = queue.pop(std::chrono::milliseconds(500))) {
      |                                                               ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:286:67: warning: 150 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  286 |             std::this_thread::sleep_for(std::chrono::milliseconds(150));
      |                                                                   ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:316:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  316 |     Node* getTail() {
      |     ~~~~~ ^
      |     auto            -> Node*
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:317:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  317 |         std::lock_guard<std::mutex> lock(tail_mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:329:13: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  329 |             std::lock_guard<std::mutex> lock(tail_mutex_);
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:339:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  339 |     std::shared_ptr<T> pop() {
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                     -> std::shared_ptr<T>
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:342:24: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  342 |         cv_.wait(lock, [this] { 
      |                        ^
      |                               -> auto
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:370:14: warning: loop variable name 'p' is too short, expected at least 2 characters [readability-identifier-length]
  370 |     for (int p = 0; p < 3; ++p) {
      |              ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:9: warning: 'emplace_back' is called inside a loop; consider pre-allocating the container capacity before the loop [performance-inefficient-vector-operation]
  370 |     for (int p = 0; p < 3; ++p) {
  371 |         producers.emplace_back([&queue, &total_produced, p]() {
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  371 |         producers.emplace_back([&queue, &total_produced, p]() {
      |                                ^
      |                                                               -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:372:33: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  372 |             for (int i = 0; i < 10; ++i) {
      |                                 ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:373:29: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  373 |                 int value = p * 100 + i;
      |                             ^~~~~~~
      |                             (      )
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:373:33: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  373 |                 int value = p * 100 + i;
      |                                 ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:377:71: warning: 50 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  377 |                 std::this_thread::sleep_for(std::chrono::milliseconds(50));
      |                                                                       ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:384:14: warning: loop variable name 'c' is too short, expected at least 2 characters [readability-identifier-length]
  384 |     for (int c = 0; c < 2; ++c) {
      |              ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:385:9: warning: 'emplace_back' is called inside a loop; consider pre-allocating the container capacity before the loop [performance-inefficient-vector-operation]
  384 |     for (int c = 0; c < 2; ++c) {
  385 |         consumers.emplace_back([&queue, &total_consumed, c]() {
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:385:32: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  385 |         consumers.emplace_back([&queue, &total_consumed, c]() {
      |                                ^
      |                                                               -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:389:71: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  389 |                 std::this_thread::sleep_for(std::chrono::milliseconds(100));
      |                                                                       ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:395:16: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  395 |     for (auto& t : producers) t.join();
      |                ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:395:30: warning: statement should be inside braces [readability-braces-around-statements]
  395 |     for (auto& t : producers) t.join();
      |                              ^         
      |                               {
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:399:16: warning: variable name 't' is too short, expected at least 3 characters [readability-identifier-length]
  399 |     for (auto& t : consumers) t.join();
      |                ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:399:30: warning: statement should be inside braces [readability-braces-around-statements]
  399 |     for (auto& t : consumers) t.join();
      |                              ^         
      |                               {
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:418:14: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  418 |         bool operator<(const Item& other) const {
      |         ~~~~ ^
      |         auto                                    -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:432:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  432 |     bool push(T data, int priority) {
      |     ~~~~ ^
      |     auto                            -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:444:10: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  444 |     bool pop(T& data, int& priority) {
      |     ~~~~ ^
      |     auto                             -> bool
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:447:24: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  447 |         cv_.wait(lock, [this] { return !queue_.empty() || finished_; });
      |                        ^
      |                               -> auto
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:449:28: warning: statement should be inside braces [readability-braces-around-statements]
  449 |         if (queue_.empty()) return false;
      |                            ^             
      |                             {
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:459:9: warning: use 'std::scoped_lock' instead of 'std::lock_guard' [modernize-use-scoped-lock]
  459 |         std::lock_guard<std::mutex> lock(mutex_);
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         std::scoped_lock
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:468:54: warning: 20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  468 |     PriorityProducerConsumerQueue<std::string> queue(20);
      |                                                      ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:471:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  471 |     std::thread producer([&queue]() {
      |                          ^
      |                                     -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:473:52: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  473 |         queue.push("СРОЧНАЯ задача!", 10);
      |                                       ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:475:49: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  475 |         queue.push("Важная задача", 5);
      |                                     ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:481:26: warning: use a trailing return type for this lambda [modernize-use-trailing-return-type]
  481 |     std::thread consumer([&queue]() {
      |                          ^
      |                                     -> void
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:483:13: warning: variable 'priority' is not initialized [cppcoreguidelines-init-variables]
  483 |         int priority;
      |             ^       
      |                      = 0
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:486:67: warning: 100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  486 |             std::this_thread::sleep_for(std::chrono::milliseconds(100));
      |                                                                   ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:500:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
  500 | int main() {
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:64:5: note: frame #0: unhandled exception of type 'std::bad_array_new_length' may be thrown in function '_Throw_bad_array_new_length' here
   64 |     _THROW(bad_array_new_length{});
      |     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\yvals.h:455:21: note: expanded from macro '_THROW'
  455 | #define _THROW(...) throw __VA_ARGS__
      |                     ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:144:9: note: frame #1: function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' calls function '_Throw_bad_array_new_length' here
  144 |         _Throw_bad_array_new_length(); // add overflow
      |         ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:242:20: note: frame #2: function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' calls function '_Allocate_manually_vector_aligned<std::_Default_allocate_traits>' here
  242 |             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);
      |                    ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:982:34: note: frame #3: function 'allocate' calls function '_Allocate<16ULL, std::_Default_allocate_traits, 0>' here
  982 |         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
      |                                  ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\xmemory:2211:16: note: frame #4: function '_Allocate_at_least_helper<std::allocator<std::thread>>' calls function 'allocate' here
 2211 |         return _Al.allocate(_Count);
      |                ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:829:43: note: frame #5: function '_Emplace_reallocate<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' calls function '_Allocate_at_least_helper<std::allocator<std::thread>>' here
  829 |         const pointer _Newvec           = _Allocate_at_least_helper(_Al, _Newcapacity);
      |                                           ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:783:17: note: frame #6: function '_Emplace_one_at_back<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' calls function '_Emplace_reallocate<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' here
  783 |         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);
      |                 ^
D:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.39.33519\include\vector:862:24: note: frame #7: function 'emplace_back<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' calls function '_Emplace_one_at_back<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' here
  862 |         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
      |                        ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:9: note: frame #8: function 'demonstrateMPMCQueue' calls function 'emplace_back<(lambda at D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:371:32)>' here
  371 |         producers.emplace_back([&queue, &total_produced, p]() {
      |         ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:506:5: note: frame #9: function 'main' calls function 'demonstrateMPMCQueue' here
  506 |     demonstrateMPMCQueue();
      |     ^
D:\Work\Patterns\07-concurrency\lesson_7_1_producer_consumer\secure_producer_consumer_alternatives.cpp:500:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  500 | int main() {
      | ~~~ ^
      | auto       -> int
Suppressed 138357 warnings (138357 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:22:7: warning: class 'Securethread_poolV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securethread_poolV1 {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:29:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securethread_poolV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:35:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securethread_poolV1& operator=(const Securethread_poolV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Securethread_poolV1&
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:41:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securethread_poolV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:49:7: warning: class 'Securethread_poolV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securethread_poolV2 {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:55:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securethread_poolV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:61:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securethread_poolV2& operator=(const Securethread_poolV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Securethread_poolV2&
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:67:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securethread_poolV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:75:7: warning: class 'Alternativethread_pool' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativethread_pool {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:82:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativethread_pool СЃРѕР·РґР°РЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:87:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativethread_pool& operator=(const Alternativethread_pool&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Alternativethread_pool&
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:93:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativethread_pool СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:102:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securethread_poolV1 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:106:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securethread_poolV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:110:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securethread_poolV2 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:114:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securethread_poolV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:118:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativethread_pool ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:122:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativethread_pool РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:130:186: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ thread_pool ===" << std::endl;
      |                                                                                                                              ^~~~~~~~~
      |                                                                                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_2_thread_pool\secure_thread_pool_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:22:7: warning: class 'Secureactor_modelV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Secureactor_modelV1 {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:29:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Secureactor_modelV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:35:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Secureactor_modelV1& operator=(const Secureactor_modelV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Secureactor_modelV1&
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:41:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Secureactor_modelV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:49:7: warning: class 'Secureactor_modelV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Secureactor_modelV2 {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:55:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Secureactor_modelV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:61:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Secureactor_modelV2& operator=(const Secureactor_modelV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Secureactor_modelV2&
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:67:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Secureactor_modelV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:75:7: warning: class 'Alternativeactor_model' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativeactor_model {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:82:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativeactor_model СЃРѕР·РґР°РЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:87:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativeactor_model& operator=(const Alternativeactor_model&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Alternativeactor_model&
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:93:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativeactor_model СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:102:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Secureactor_modelV1 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:106:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Secureactor_modelV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:110:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Secureactor_modelV2 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:114:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Secureactor_modelV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:118:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativeactor_model ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:122:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativeactor_model РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:130:186: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ actor_model ===" << std::endl;
      |                                                                                                                              ^~~~~~~~~
      |                                                                                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_3_actor_model\secure_actor_model_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:22:7: warning: class 'SecurereactorV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecurereactorV1 {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:29:130: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecurereactorV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                       ^~~~~~~~~
      |                                                                                                       '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:35:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecurereactorV1& operator=(const SecurereactorV1&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> SecurereactorV1&
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:41:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecurereactorV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:49:7: warning: class 'SecurereactorV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecurereactorV2 {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:55:130: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecurereactorV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                       ^~~~~~~~~
      |                                                                                                       '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:61:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecurereactorV2& operator=(const SecurereactorV2&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> SecurereactorV2&
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:67:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecurereactorV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:75:7: warning: class 'Alternativereactor' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativereactor {
      |       ^
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:82:71: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativereactor СЃРѕР·РґР°РЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:87:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativereactor& operator=(const Alternativereactor&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                     -> Alternativereactor&
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:93:85: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativereactor СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                 ^~~~~~~~~
      |                                                                 '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:102:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurereactorV1 ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:106:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecurereactorV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:110:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurereactorV2 ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:114:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecurereactorV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:118:103: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativereactor ===" << std::endl;
      |                                                                                    ^~~~~~~~~
      |                                                                                    '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:122:112: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativereactor РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:130:182: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ reactor ===" << std::endl;
      |                                                                                                                          ^~~~~~~~~
      |                                                                                                                          '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\07-concurrency\lesson_7_4_reactor\secure_reactor_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:22:7: warning: class 'Securecache_asideV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securecache_asideV1 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:29:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securecache_asideV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:35:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securecache_asideV1& operator=(const Securecache_asideV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Securecache_asideV1&
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:41:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securecache_asideV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:49:7: warning: class 'Securecache_asideV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securecache_asideV2 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:55:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securecache_asideV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:61:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securecache_asideV2& operator=(const Securecache_asideV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Securecache_asideV2&
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:67:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securecache_asideV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:75:7: warning: class 'Alternativecache_aside' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativecache_aside {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:82:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativecache_aside СЃРѕР·РґР°РЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:87:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativecache_aside& operator=(const Alternativecache_aside&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Alternativecache_aside&
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:93:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativecache_aside СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:102:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecache_asideV1 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:106:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securecache_asideV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:110:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecache_asideV2 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:114:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securecache_asideV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:118:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativecache_aside ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:122:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativecache_aside РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:130:186: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ cache_aside ===" << std::endl;
      |                                                                                                                              ^~~~~~~~~
      |                                                                                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_1_cache_aside\secure_cache_aside_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'

================================================================================
FILE: D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:22:7: warning: class 'Securecircuit_breakerV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securecircuit_breakerV1 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:29:138: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securecircuit_breakerV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                               ^~~~~~~~~
      |                                                                                                               '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:35:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securecircuit_breakerV1& operator=(const Securecircuit_breakerV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                               -> Securecircuit_breakerV1&
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:41:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securecircuit_breakerV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:49:7: warning: class 'Securecircuit_breakerV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securecircuit_breakerV2 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:55:138: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securecircuit_breakerV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                               ^~~~~~~~~
      |                                                                                                               '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:61:30: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securecircuit_breakerV2& operator=(const Securecircuit_breakerV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                               -> Securecircuit_breakerV2&
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:67:90: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securecircuit_breakerV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                      ^~~~~~~~~
      |                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:75:7: warning: class 'Alternativecircuit_breaker' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativecircuit_breaker {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:82:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativecircuit_breaker СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:87:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativecircuit_breaker& operator=(const Alternativecircuit_breaker&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                     -> Alternativecircuit_breaker&
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:93:93: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativecircuit_breaker СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                         ^~~~~~~~~
      |                                                                         '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:102:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecircuit_breakerV1 ===" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:106:117: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securecircuit_breakerV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:110:108: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecircuit_breakerV2 ===" << std::endl;
      |                                                                                         ^~~~~~~~~
      |                                                                                         '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:114:117: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securecircuit_breakerV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:118:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativecircuit_breaker ===" << std::endl;
      |                                                                                            ^~~~~~~~~
      |                                                                                            '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:122:120: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativecircuit_breaker РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:130:190: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ circuit_breaker ===" << std::endl;
      |                                                                                                                                  ^~~~~~~~~
      |                                                                                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_2_circuit_breaker\secure_circuit_breaker_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:22:7: warning: class 'SecurebulkheadV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecurebulkheadV1 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:29:131: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecurebulkheadV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                        ^~~~~~~~~
      |                                                                                                        '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:35:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecurebulkheadV1& operator=(const SecurebulkheadV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> SecurebulkheadV1&
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:41:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecurebulkheadV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:49:7: warning: class 'SecurebulkheadV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecurebulkheadV2 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:55:131: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecurebulkheadV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                        ^~~~~~~~~
      |                                                                                                        '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:61:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecurebulkheadV2& operator=(const SecurebulkheadV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~ ^
      |     auto                                                 -> SecurebulkheadV2&
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:67:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecurebulkheadV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:75:7: warning: class 'Alternativebulkhead' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativebulkhead {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:82:72: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativebulkhead СЃРѕР·РґР°РЅ" << std::endl;
      |                                                            ^~~~~~~~~
      |                                                            '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:87:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativebulkhead& operator=(const Alternativebulkhead&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Alternativebulkhead&
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:93:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativebulkhead СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:102:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurebulkheadV1 ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:106:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecurebulkheadV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:110:101: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecurebulkheadV2 ===" << std::endl;
      |                                                                                  ^~~~~~~~~
      |                                                                                  '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:114:110: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecurebulkheadV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                           ^~~~~~~~~
      |                                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:118:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativebulkhead ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:122:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativebulkhead РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:130:183: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ bulkhead ===" << std::endl;
      |                                                                                                                           ^~~~~~~~~
      |                                                                                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_3_bulkhead\secure_bulkhead_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:22:7: warning: class 'SecuresagaV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecuresagaV1 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:29:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecuresagaV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:35:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecuresagaV1& operator=(const SecuresagaV1&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> SecuresagaV1&
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:41:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecuresagaV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:49:7: warning: class 'SecuresagaV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecuresagaV2 {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:55:127: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecuresagaV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                    ^~~~~~~~~
      |                                                                                                    '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:61:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecuresagaV2& operator=(const SecuresagaV2&) = delete;
      |     ~~~~~~~~~~~~~ ^
      |     auto                                         -> SecuresagaV2&
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:67:79: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecuresagaV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                           ^~~~~~~~~
      |                                                           '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:75:7: warning: class 'Alternativesaga' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativesaga {
      |       ^
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:82:68: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativesaga СЃРѕР·РґР°РЅ" << std::endl;
      |                                                        ^~~~~~~~~
      |                                                        '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:87:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativesaga& operator=(const Alternativesaga&) = delete;
      |     ~~~~~~~~~~~~~~~~ ^
      |     auto                                               -> Alternativesaga&
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:93:82: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativesaga СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:102:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecuresagaV1 ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:106:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecuresagaV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:110:97: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecuresagaV2 ===" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:114:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecuresagaV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:118:100: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativesaga ===" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:122:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativesaga РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                          ^~~~~~~~~
      |                                                                          '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:130:179: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ saga ===" << std::endl;
      |                                                                                                                       ^~~~~~~~~
      |                                                                                                                       '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
Suppressed 106451 warnings (106451 in non-user code).
D:\Work\Patterns\08-high-load\lesson_8_4_saga\secure_saga_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'

================================================================================
FILE: D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:22:7: warning: class 'Secureobject_poolV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Secureobject_poolV1 {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:29:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Secureobject_poolV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:35:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Secureobject_poolV1& operator=(const Secureobject_poolV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Secureobject_poolV1&
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:41:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Secureobject_poolV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:49:7: warning: class 'Secureobject_poolV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Secureobject_poolV2 {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:55:134: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Secureobject_poolV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                           ^~~~~~~~~
      |                                                                                                           '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:61:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Secureobject_poolV2& operator=(const Secureobject_poolV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                       -> Secureobject_poolV2&
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:67:86: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Secureobject_poolV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                  ^~~~~~~~~
      |                                                                  '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:75:7: warning: class 'Alternativeobject_pool' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativeobject_pool {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:82:75: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativeobject_pool СЃРѕР·РґР°РЅ" << std::endl;
      |                                                               ^~~~~~~~~
      |                                                               '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:87:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativeobject_pool& operator=(const Alternativeobject_pool&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                             -> Alternativeobject_pool&
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:93:89: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativeobject_pool СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                     ^~~~~~~~~
      |                                                                     '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:102:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Secureobject_poolV1 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:106:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Secureobject_poolV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:110:104: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Secureobject_poolV2 ===" << std::endl;
      |                                                                                     ^~~~~~~~~
      |                                                                                     '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:114:113: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Secureobject_poolV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                              ^~~~~~~~~
      |                                                                              '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:118:107: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativeobject_pool ===" << std::endl;
      |                                                                                        ^~~~~~~~~
      |                                                                                        '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:122:116: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativeobject_pool РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                 ^~~~~~~~~
      |                                                                                 '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:130:186: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ object_pool ===" << std::endl;
      |                                                                                                                              ^~~~~~~~~
      |                                                                                                                              '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\09-performance\lesson_9_1_object_pool\secure_object_pool_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

================================================================================
FILE: D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:22:7: warning: class 'SecureflyweightV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class SecureflyweightV1 {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:29:132: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "SecureflyweightV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                         ^~~~~~~~~
      |                                                                                                         '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:35:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     SecureflyweightV1& operator=(const SecureflyweightV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureflyweightV1&
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:41:84: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "SecureflyweightV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                ^~~~~~~~~
      |                                                                '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:49:7: warning: class 'SecureflyweightV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class SecureflyweightV2 {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:55:132: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "SecureflyweightV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                         ^~~~~~~~~
      |                                                                                                         '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:61:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     SecureflyweightV2& operator=(const SecureflyweightV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                   -> SecureflyweightV2&
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:67:84: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "SecureflyweightV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                ^~~~~~~~~
      |                                                                '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:75:7: warning: class 'Alternativeflyweight' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativeflyweight {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:82:73: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativeflyweight СЃРѕР·РґР°РЅ" << std::endl;
      |                                                             ^~~~~~~~~
      |                                                             '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:87:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativeflyweight& operator=(const Alternativeflyweight&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                         -> Alternativeflyweight&
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:93:87: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativeflyweight СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                   ^~~~~~~~~
      |                                                                   '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:102:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecureflyweightV1 ===" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:106:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "SecureflyweightV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:110:102: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ SecureflyweightV2 ===" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:114:111: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "SecureflyweightV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                            ^~~~~~~~~
      |                                                                            '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:118:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativeflyweight ===" << std::endl;
      |                                                                                      ^~~~~~~~~
      |                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:122:114: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativeflyweight РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                               ^~~~~~~~~
      |                                                                               '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:130:184: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ flyweight ===" << std::endl;
      |                                                                                                                            ^~~~~~~~~
      |                                                                                                                            '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
D:\Work\Patterns\09-performance\lesson_9_2_flyweight\secure_flyweight_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'

================================================================================
FILE: D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp
WARNINGS: 25
ERRORS: 0
================================================================================
106476 warnings generated.
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:22:7: warning: class 'Securecommand_queueV1' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   22 | class Securecommand_queueV1 {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:29:136: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   29 |         std::cout << "Securecommand_queueV1 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:35:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   35 |     Securecommand_queueV1& operator=(const Securecommand_queueV1&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                           -> Securecommand_queueV1&
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:41:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   41 |         std::cout << "Securecommand_queueV1 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:49:7: warning: class 'Securecommand_queueV2' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   49 | class Securecommand_queueV2 {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:55:136: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   55 |         std::cout << "Securecommand_queueV2 СЃРѕР·РґР°РЅ РІ РїРѕС‚РѕРєРµ " << std::this_thread::get_id() << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:61:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 |     Securecommand_queueV2& operator=(const Securecommand_queueV2&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                           -> Securecommand_queueV2&
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:67:88: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |         std::cout << "Securecommand_queueV2 СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                    ^~~~~~~~~
      |                                                                    '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:75:7: warning: class 'Alternativecommand_queue' defines a non-default destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions]
   75 | class Alternativecommand_queue {
      |       ^
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:82:77: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   82 |         std::cout << "Alternativecommand_queue СЃРѕР·РґР°РЅ" << std::endl;
      |                                                                 ^~~~~~~~~
      |                                                                 '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:87:31: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   87 |     Alternativecommand_queue& operator=(const Alternativecommand_queue&) = delete;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      |     auto                                                                 -> Alternativecommand_queue&
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:93:91: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   93 |         std::cout << "Alternativecommand_queue СѓРЅРёС‡С‚РѕР¶РµРЅ" << std::endl;
      |                                                                       ^~~~~~~~~
      |                                                                       '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:102:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  102 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecommand_queueV1 ===" << std::endl;
      |                                                                                       ^~~~~~~~~
      |                                                                                       '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:106:115: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  106 |     std::cout << "Securecommand_queueV1 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:110:106: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  110 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Securecommand_queueV2 ===" << std::endl;
      |                                                                                       ^~~~~~~~~
      |                                                                                       '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:114:115: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  114 |     std::cout << "Securecommand_queueV2 РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                ^~~~~~~~~
      |                                                                                '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:118:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  118 |     std::cout << "\n=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Alternativecommand_queue ===" << std::endl;
      |                                                                                          ^~~~~~~~~
      |                                                                                          '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:122:118: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  122 |     std::cout << "Alternativecommand_queue РїСЂРѕРґРµРјРѕРЅСЃС‚СЂРёСЂРѕРІР°РЅ" << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:129:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  129 | int main() {
      | ~~~ ^
      | auto       -> int
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:130:188: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  130 |     std::cout << "=== Р”Р•РњРћРќРЎРўР РђР¦Р<U+0098>РЇ Р‘Р•Р—РћРџРђРЎРќР«РҐ РђР›Р¬РўР•Р РќРђРўР<U+0098>Р’ command_queue ===" << std::endl;
      |                                                                                                                                ^~~~~~~~~
      |                                                                                                                                '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:137:146: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  137 |     std::cout << "\n=== Р Р•РљРћРњР•РќР”РђР¦Р<U+0098>Р<U+0098> РџРћ Р‘Р•Р—РћРџРђРЎРќРћРЎРўР<U+0098> ===" << std::endl;
      |                                                                                                             ^~~~~~~~~
      |                                                                                                             '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:138:237: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  138 |     std::cout << "1. TODO: Р”РѕР±Р°РІРёС‚СЊ РєРѕРЅРєСЂРµС‚РЅС‹Рµ СЂРµРєРѕРјРµРЅРґР°С†РёРё РґР»СЏ РґР°РЅРЅРѕРіРѕ РїР°С‚С‚РµСЂРЅР°" << std::endl;
      |                                                                                                                                      ^~~~~~~~~
      |                                                                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:139:201: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  139 |     std::cout << "2. TODO: Р РµРєРѕРјРµРЅРґР°С†РёРё РїРѕ Р±РµР·РѕРїР°СЃРЅРѕРјСѓ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёСЋ" << std::endl;
      |                                                                                                                      ^~~~~~~~~
      |                                                                                                                      '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:140:94: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  140 |     std::cout << "3. TODO: Р›СѓС‡С€РёРµ РїСЂР°РєС‚РёРєРё" << std::endl;
      |                                                              ^~~~~~~~~
      |                                                              '\n'
D:\Work\Patterns\09-performance\lesson_9_3_command_queue\secure_command_queue_alternatives.cpp:141:109: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  141 |     std::cout << "4. TODO: Р<U+0098>РЅСЃС‚СЂСѓРјРµРЅС‚С‹ Р°РЅР°Р»РёР·Р°" << std::endl;
      |                                                                             ^~~~~~~~~
      |                                                                             '\n'
Suppressed 106451 warnings (106451 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

